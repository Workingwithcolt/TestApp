{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\";\nimport { NODATA, users } from \"../helper/extrapropertise\";\nimport DataView from \"../GenericComponent/Dataview\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { dataview } from \"../styles/Dataview\";\nimport { ProjectDetailView } from \"./ProjectDetailView\";\nimport { Card, Text } from 'react-native-paper';\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\";\nimport { useState } from \"react\";\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ResponsiveCard = function ResponsiveCard(_ref) {\n  var item = _ref.item,\n    navigation = _ref.navigation,\n    setSelectedItem = _ref.setSelectedItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var queryClient = useQueryClient();\n  var _useState3 = useState({\n      isloading: false,\n      error: undefined,\n      isSuccess: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  var updateItem = function () {\n    var _ref2 = _asyncToGenerator(function* (state) {\n      try {\n        yield endpoints.Account.update(state, {\n          _id: state._id\n        });\n        return state._id;\n      } catch (e) {\n        return Promise.reject(e.message);\n      }\n    });\n    return function updateItem(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var deleteItem = function () {\n    var _ref3 = _asyncToGenerator(function* (item) {\n      try {\n        setStatus({\n          isloading: true,\n          error: undefined,\n          isSuccess: false\n        });\n        yield endpoints.Account.delete(null, {\n          _id: item._id\n        });\n        setStatus({\n          isloading: false,\n          error: undefined,\n          isSuccess: true\n        });\n        queryClient.invalidateQueries({\n          predicate: function predicate(query) {\n            return query.queryKey.includes(UPDATE_ON_ACCOUNT);\n          }\n        });\n      } catch (e) {\n        setStatus({\n          isloading: false,\n          error: e.message,\n          isSuccess: false\n        });\n      }\n    });\n    return function deleteItem(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Card, {\n    style: {\n      width: \"100%\"\n    },\n    children: [_jsxs(Card.Content, {\n      children: [_jsxs(Text, {\n        variant: \"titleLarge\",\n        children: [\" \", item.clientName || NODATA]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.email]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.aadhar]\n      })]\n    }), modalVisible ? _jsx(ProjectModal, {\n      init: item,\n      onSubmit: updateItem,\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible\n    }) : _jsx(_Fragment, {}), _jsx(Card.Actions, {\n      children: status.isloading ? _jsx(View, {\n        children: _jsx(LoadingSpinner, {})\n      }) : status.error ? _jsx(View, {\n        children: status.error\n      }) : status.isSuccess ? _jsx(View, {\n        children: \"Deleted Successfully !!\"\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(IconButton, {\n          icon: \"camera\",\n          iconColor: MD3Colors.error50,\n          size: 20,\n          onPress: function onPress() {\n            return console.log('Pressed');\n          }\n        }), _jsx(Button, {\n          title: \"Detail\",\n          onPress: function onPress() {\n            return setSelectedItem(item);\n          }\n        }), _jsx(Button, {\n          title: FaRegEdit,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          }\n        }), _jsx(Button, {\n          title: \"delete\",\n          onPress: _asyncToGenerator(function* () {\n            return yield deleteItem(item);\n          })\n        })]\n      })\n    })]\n  });\n};\nexport var Projects = function Projects(_ref5) {\n  var navigation = _ref5.navigation;\n  var queryKey = [UPDATE_ON_ACCOUNT];\n  var queryFunction = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var accounts = yield endpoints.Account.getAll();\n      return accounts;\n    });\n    return function queryFunction() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    return (current == null ? void 0 : current.email) + (current == null ? void 0 : current.clientName) + (current == null ? void 0 : current.aadhar) || \"\";\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsx(DataView, {\n      queryFunction: queryFunction,\n      queryKey: queryKey,\n      getSearchableValue: getValueToSearch,\n      Card: ResponsiveCard,\n      dataviewTitle: \"Projects\",\n      navigation: navigation,\n      DetailedElement: ProjectDetailView\n    })\n  });\n};","map":{"version":3,"names":["UPDATE_ON_ACCOUNT","endpoints","NODATA","users","DataView","Button","SafeAreaView","View","dataview","ProjectDetailView","Card","Text","ProjectModal","useState","LoadingSpinner","useQueryClient","FaRegEdit","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ResponsiveCard","_ref","item","navigation","setSelectedItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","queryClient","_useState3","isloading","error","undefined","isSuccess","_useState4","status","setStatus","updateItem","_ref2","_asyncToGenerator","state","Account","update","_id","e","Promise","reject","message","_x","apply","arguments","deleteItem","_ref3","delete","invalidateQueries","predicate","query","queryKey","includes","_x2","style","width","children","Content","variant","clientName","email","aadhar","init","onSubmit","Actions","IconButton","icon","iconColor","MD3Colors","error50","size","onPress","console","log","title","Projects","_ref5","queryFunction","_ref6","accounts","getAll","getValueToSearch","current","getSearchableValue","dataviewTitle","DetailedElement"],"sources":["D:/Logingfg - Copy/src/screens/Projects.js"],"sourcesContent":["\r\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\"\r\nimport { NODATA, users } from \"../helper/extrapropertise\"\r\nimport DataView from \"../GenericComponent/Dataview\"\r\nimport { Button, SafeAreaView, View } from \"react-native-web\"\r\nimport { dataview } from \"../styles/Dataview\"\r\nimport { ProjectDetailView } from \"./ProjectDetailView\"\r\nimport { Card, Text } from 'react-native-paper';\r\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\"\r\nimport { useState } from \"react\"\r\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\"\r\nimport { useQueryClient } from \"@tanstack/react-query\"\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\n\r\nconst ResponsiveCard = ({ item, navigation, setSelectedItem }) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const queryClient = useQueryClient()\r\n    const [status, setStatus] = useState({\r\n        isloading: false, error: undefined, isSuccess: false\r\n    })\r\n\r\n    const updateItem = async (state) => {\r\n        try {\r\n            await endpoints.Account.update(state, { _id: state._id })\r\n            return state._id;\r\n        } catch (e) {\r\n            return Promise.reject(e.message)\r\n        }\r\n    }\r\n    const deleteItem = async (item) => {\r\n        try {\r\n            setStatus({\r\n                isloading: true, error: undefined, isSuccess: false\r\n            })\r\n            await endpoints.Account.delete(null, { _id: item._id })\r\n            setStatus({\r\n                isloading: false, error: undefined, isSuccess: true\r\n            })\r\n            queryClient.invalidateQueries({\r\n                predicate: (query) =>\r\n                    query.queryKey.includes(UPDATE_ON_ACCOUNT)\r\n            })\r\n        } catch (e) {\r\n            setStatus({\r\n                isloading: false, error: e.message, isSuccess: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: \"100%\" }}>\r\n            <Card.Content>\r\n                <Text variant=\"titleLarge\"> {item.clientName || NODATA}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.email}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.aadhar}</Text>\r\n            </Card.Content>\r\n            {\r\n                modalVisible ?\r\n                    <ProjectModal\r\n                        init={item}\r\n                        onSubmit={updateItem}\r\n                        modalVisible={modalVisible}\r\n                        setModalVisible={setModalVisible}\r\n                    />\r\n                    : <></>\r\n            }\r\n            <Card.Actions>\r\n\r\n                {\r\n                    status.isloading ?\r\n                        <View>\r\n                            <LoadingSpinner />\r\n                        </View >\r\n                        : status.error ? (<View>\r\n                            {status.error}\r\n                        </View>)\r\n                            : status.isSuccess ?\r\n                                (<View>\r\n                                    Deleted Successfully !!\r\n                                </View>)\r\n                                :\r\n                                (<>\r\n                                    <IconButton\r\n                                        icon=\"camera\"\r\n                                        iconColor={MD3Colors.error50}\r\n                                        size={20}\r\n                                        onPress={() => console.log('Pressed')}\r\n                                    />\r\n\r\n                                    <Button title=\"Detail\" onPress={() => setSelectedItem(item)} />\r\n                                    <Button title={FaRegEdit} onPress={() => setModalVisible(true)} />\r\n                                    <Button title=\"delete\" onPress={async () => await deleteItem(item)} /></>)}\r\n            </Card.Actions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const Projects = ({ navigation }) => {\r\n    const queryKey = [UPDATE_ON_ACCOUNT]\r\n    const queryFunction = async () => {\r\n        var accounts = await endpoints.Account.getAll()\r\n        return accounts\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        return (\r\n            (current?.email +\r\n                current?.clientName +\r\n                current?.aadhar) || \"\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <DataView\r\n                queryFunction={queryFunction}\r\n                queryKey={queryKey}\r\n                getSearchableValue={getValueToSearch}\r\n                Card={ResponsiveCard}\r\n                dataviewTitle={\"Projects\"}\r\n                navigation={navigation}\r\n                DetailedElement={ProjectDetailView}\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}