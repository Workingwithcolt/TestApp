{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { endpoints } from \"../Endpoints/endpoints\";\nimport DataView from \"./Dataview\";\nimport { dataview } from \"../styles/Dataview\";\nimport { JPG_CONTENT_TYPE, PNG_CONTENT_TYPE } from \"../helper/extrapropertise\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction base64ToBlob(base64) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"application/octet-stream\";\n  var byteCharacters = atob(base64);\n  var byteArrays = [];\n  for (var i = 0; i < byteCharacters.length; i++) {\n    byteArrays.push(byteCharacters.charCodeAt(i));\n  }\n  var byteArray = new Uint8Array(byteArrays);\n  return new Blob([byteArray], {\n    type: type\n  });\n}\nvar Card = function Card(_ref) {\n  var item = _ref.item;\n  console.log(item);\n  return _jsx(SafeAreaView, {\n    children: _jsx(View, {\n      style: dataview.img,\n      children: item.ContentType === PNG_CONTENT_TYPE || item.ContentType === JPG_CONTENT_TYPE ? _jsx(\"img\", {\n        src: item == null ? void 0 : item.value,\n        alt: \"link chalana\"\n      }) : _jsx(Button, {\n        onPress: function onPress() {\n          var value = base64ToBlob(item.value, 'application/pdf');\n          var url = URL.createObjectURL(value);\n          window.open(url);\n        },\n        children: \"Open PDF\"\n      })\n    })\n  });\n};\nexport var ShowFile = function ShowFile(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var _route$params = route == null ? void 0 : route.params,\n    id = _route$params.id;\n  var queryKey = [id, \"Images\"];\n  var queryFunction = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var data = yield endpoints.Account.getAll(null, {\n        _id: id\n      });\n      console.log(data);\n      var result = [];\n      Object.entries(data[0]).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          key = _ref5[0],\n          value = _ref5[1];\n        if (value instanceof Array) {\n          console.log(\"it is aray\");\n          result.push.apply(result, _toConsumableArray(value));\n        } else if (value instanceof Object) {\n          console.log(\"it \");\n          result.push(value);\n        }\n      });\n      console.log(result);\n      return result;\n    });\n    return function queryFunction() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    return current.UniqueID || \"\";\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsx(DataView, {\n      queryFunction: queryFunction,\n      queryKey: queryKey,\n      getSearchableValue: getValueToSearch,\n      Card: Card,\n      dataviewTitle: \"Users\",\n      navigation: navigation,\n      newDataButton: _jsx(Button, {\n        title: \"Add File\",\n        onPress: function onPress() {\n          return navigation.navigate('Upload', {\n            id: id\n          });\n        }\n      })\n    })\n  });\n};","map":{"version":3,"names":["endpoints","DataView","dataview","JPG_CONTENT_TYPE","PNG_CONTENT_TYPE","jsx","_jsx","base64ToBlob","base64","type","arguments","length","undefined","byteCharacters","atob","byteArrays","i","push","charCodeAt","byteArray","Uint8Array","Blob","Card","_ref","item","console","log","SafeAreaView","children","View","style","img","ContentType","src","value","alt","Button","onPress","url","URL","createObjectURL","window","open","ShowFile","_ref2","route","navigation","_route$params","params","id","queryKey","queryFunction","_ref3","_asyncToGenerator","data","Account","getAll","_id","result","Object","entries","forEach","_ref4","_ref5","_slicedToArray","key","Array","apply","_toConsumableArray","getValueToSearch","current","UniqueID","getSearchableValue","dataviewTitle","newDataButton","title","navigate"],"sources":["D:/Logingfg - Copy/src/GenericComponent/ShowFile.js"],"sourcesContent":["import { Button, SafeAreaView, View, Text } from \"react-native-web\";\r\nimport { endpoints } from \"../Endpoints/endpoints\";\r\nimport DataView from \"./Dataview\";\r\nimport { dataview } from \"../styles/Dataview\";\r\nimport { JPG_CONTENT_TYPE, PNG_CONTENT_TYPE } from \"../helper/extrapropertise\";\r\nfunction base64ToBlob( base64, type = \"application/octet-stream\" ) {\r\n    const byteCharacters = atob(base64);\r\n    const byteArrays = [];\r\n\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteArrays.push(byteCharacters.charCodeAt(i));\r\n    }\r\n\r\n    const byteArray = new Uint8Array(byteArrays);\r\n    return new Blob([byteArray], { type: type });\r\n  }\r\nconst Card = ({ item }) => {\r\n    console.log(item);\r\n    return (\r\n        <SafeAreaView >\r\n            <View style={dataview.img} >\r\n\r\n                {\r\n                    (item.ContentType === PNG_CONTENT_TYPE || item.ContentType === JPG_CONTENT_TYPE)\r\n                        ?\r\n                        <img src={item?.value} alt=\"link chalana\"></img>\r\n                        : <Button onPress={() => {\r\n                            let value = base64ToBlob(item.value,'application/pdf' )\r\n                            const url = URL.createObjectURL( value );\r\n                            window.open(url)\r\n                        }}>Open PDF</Button>\r\n                }\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport const ShowFile = ({ route, navigation }) => {\r\n    const { id } = route?.params;\r\n\r\n    const queryKey = [id, \"Images\"]\r\n\r\n    const queryFunction = async () => {\r\n        var data = await endpoints.Account.getAll(null, { _id: id })\r\n        console.log(data);\r\n        let result = []\r\n        Object.entries(data[0]).forEach(([key, value]) => {\r\n            if (value instanceof Array) {\r\n                console.log(\"it is aray\");\r\n                result.push(...value)\r\n            } else if (value instanceof Object) {\r\n                console.log(\"it \");\r\n                result.push(value)\r\n            }\r\n        });\r\n        console.log(result);\r\n        return result\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        return (\r\n            current.UniqueID || \"\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView >\r\n            <DataView\r\n                queryFunction={queryFunction}\r\n                queryKey={queryKey}\r\n                getSearchableValue={getValueToSearch}\r\n                Card={Card}\r\n                dataviewTitle={\"Users\"}\r\n                navigation={navigation}\r\n                newDataButton={\r\n                    <Button title=\"Add File\" onPress={() =>\r\n                        navigation.navigate('Upload', {\r\n                            id: id\r\n                        })\r\n                    } />\r\n                }\r\n            />\r\n        </SafeAreaView>\r\n\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}