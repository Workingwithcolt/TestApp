{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useReducer, useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Propertylist, SchemaTypes, Section1, Section4, Section5, urlHead } from \"../helper/extrapropertise\";\nimport { blobToBase64, deepCopyObject, getIndex } from \"../helper/helper\";\nimport { endpoints } from \"../Endpoints/endpoints\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ADD_PROPS_TYPE = \"Add_Property\";\nvar REMOVE_PROPS_TYPE = \"Remove_Property\";\nvar ADD_ARRAY = \"push\";\nvar UPDATE_PROP_VALUES = \"update\";\nvar reducer = function reducer(state, action) {\n  var _action$payload;\n  var currentState = deepCopyObject(state);\n  if ((action.type === ADD_ARRAY || action.type === UPDATE_PROP_VALUES) && state[action.payload.name]) {\n    currentState[action.payload.name] = _toConsumableArray(state[action.payload.name]);\n  }\n  switch (action.type) {\n    case ADD_PROPS_TYPE:\n      var data = undefined;\n      if ((_action$payload = action.payload) != null && _action$payload.ContentType) {\n        data = {\n          value: action.payload.value,\n          ContentType: action.payload.ContentType,\n          fileName: action.payload.fileName\n        };\n      } else {\n        data = action.payload.value;\n      }\n      currentState[action.payload.name] = data;\n      break;\n    case ADD_ARRAY:\n      if (!currentState[action.payload.name]) {\n        currentState[action.payload.name] = [];\n      }\n      currentState[action.payload.name].push({});\n      break;\n    case UPDATE_PROP_VALUES:\n      currentState[action.payload.name][action.payload.index] = {\n        value: action.payload.value,\n        ContentType: action.payload.ContentType,\n        fileName: action.payload.fileName\n      };\n      break;\n    case REMOVE_PROPS_TYPE:\n      delete currentState[action.payload];\n      break;\n    default:\n  }\n  return currentState;\n};\nvar ProjectDetailsModal = function ProjectDetailsModal(_ref) {\n  var _Object$entries, _Object$entries2, _Object$entries3, _Object$entries4;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _route$params = route == null ? void 0 : route.params,\n    data = _route$params.data;\n  var init = data ? data : {};\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useReducer = useReducer(reducer, init),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var ConvertToBase64 = function () {\n    var _ref2 = _asyncToGenerator(function* (index, name, e) {\n      var _e$target$files$, _e$target$files$2, _e$target$files$3;\n      var data = yield blobToBase64(e.target.files[0]);\n      console.log((_e$target$files$ = e.target.files[0]) == null ? void 0 : _e$target$files$.type);\n      dispatch({\n        type: UPDATE_PROP_VALUES,\n        payload: {\n          ContentType: (_e$target$files$2 = e.target.files[0]) == null ? void 0 : _e$target$files$2.type,\n          index: index,\n          name: name,\n          value: data,\n          fileName: (_e$target$files$3 = e.target.files[0]) == null ? void 0 : _e$target$files$3.name\n        }\n      });\n    });\n    return function ConvertToBase64(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var Modal1Bkcall = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var data = endpoints.Account.create(state);\n      setModalVisible(false);\n      console.log(\"lets print form data\", data);\n      console.log(data);\n    });\n    return function Modal1Bkcall() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var Onchange = function () {\n    var _ref4 = _asyncToGenerator(function* (e, element) {\n      if (element.type === SchemaTypes.file) {\n        var _e$target$files$4, _e$target$files$5;\n        var _data = yield blobToBase64(e.target.files[0]);\n        console.log(e.target.files[0]);\n        dispatch({\n          type: ADD_PROPS_TYPE,\n          payload: {\n            fileName: (_e$target$files$4 = e.target.files[0]) == null ? void 0 : _e$target$files$4.name,\n            name: element.name,\n            value: _data,\n            ContentType: (_e$target$files$5 = e.target.files[0]) == null ? void 0 : _e$target$files$5.type\n          }\n        });\n      } else {\n        dispatch({\n          type: ADD_PROPS_TYPE,\n          payload: {\n            name: element.name,\n            value: e.target.value\n          }\n        });\n      }\n    });\n    return function Onchange(_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: '10px'\n    },\n    children: [_jsx(Button, {\n      title: \"Add new Project Details\",\n      onPress: function onPress() {\n        return setModalVisible(true);\n      }\n    }), _jsx(Button, {\n      title: \"Users\",\n      onPress: function onPress() {\n        return navigation.navigate('Users');\n      }\n    }), _jsx(Button, {\n      title: \"Projects\",\n      onPress: function onPress() {\n        return navigation.navigate('Projects');\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        children: _jsxs(ScrollView, {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 10\n          },\n          children: [_jsx(Text, {\n            children: \"Section 1: Client Basic Details\"\n          }), Section1.map(function (element) {\n            return _jsxs(_Fragment, {\n              children: [_jsx(\"label\", {\n                for: element.name,\n                style: {\n                  marginTop: 0\n                },\n                children: element.placeholder\n              }), _jsx(\"input\", {\n                id: element.name,\n                placeholder: element.placeholder,\n                value: state[element.name] ? state[element.name] : \"\",\n                onChange: function onChange(e) {\n                  return Onchange(e, element);\n                },\n                type: element.type,\n                style: element.style\n              })]\n            });\n          }), _jsx(Text, {\n            children: \"Section 2:Add Presentation Drawing\"\n          }), _jsxs(View, {\n            children: [(state == null ? void 0 : state[Propertylist.PresentationDraw.name]) && ((_Object$entries = Object.entries(state[Propertylist.PresentationDraw.name])) == null ? void 0 : _Object$entries.map(function (element, index) {\n              return _jsxs(View, {\n                children: [_jsx(\"label\", {\n                  for: Propertylist.PresentationDraw.name,\n                  style: {\n                    marginTop: 0\n                  },\n                  children: Propertylist.PresentationDraw.placeholder\n                }), _jsx(\"input\", {\n                  id: Propertylist.PresentationDraw.name,\n                  placeholder: Propertylist.PresentationDraw.placeholder,\n                  onChange: (function () {\n                    var _ref5 = _asyncToGenerator(function* (e) {\n                      return yield ConvertToBase64(index, Propertylist.PresentationDraw.name, e);\n                    });\n                    return function (_x6) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }()),\n                  type: Propertylist.PresentationDraw.type,\n                  style: Propertylist.PresentationDraw.style\n                })]\n              });\n            })), _jsx(Button, {\n              title: \"Add\",\n              onPress: function onPress() {\n                dispatch({\n                  type: ADD_ARRAY,\n                  payload: {\n                    name: Propertylist.PresentationDraw.name\n                  }\n                });\n              }\n            })]\n          }), _jsx(Text, {\n            children: \"Section 3: Add 3d Models\"\n          }), _jsxs(View, {\n            children: [(state == null ? void 0 : state[Propertylist.FileModel3D.name]) && ((_Object$entries2 = Object.entries(state[Propertylist.FileModel3D.name])) == null ? void 0 : _Object$entries2.map(function (element, index) {\n              return _jsxs(View, {\n                children: [_jsx(\"label\", {\n                  for: Propertylist.FileModel3D.name,\n                  style: {\n                    marginTop: 0\n                  },\n                  children: Propertylist.FileModel3D.placeholder\n                }), _jsx(\"input\", {\n                  id: Propertylist.FileModel3D.name,\n                  placeholder: Propertylist.FileModel3D.placeholder,\n                  onChange: (function () {\n                    var _ref6 = _asyncToGenerator(function* (e) {\n                      return yield ConvertToBase64(index, Propertylist.FileModel3D.name, e);\n                    });\n                    return function (_x7) {\n                      return _ref6.apply(this, arguments);\n                    };\n                  }()),\n                  type: Propertylist.FileModel3D.type,\n                  style: Propertylist.FileModel3D.style\n                })]\n              });\n            })), _jsx(Button, {\n              title: \"Add\",\n              onPress: function onPress() {\n                dispatch({\n                  type: ADD_ARRAY,\n                  payload: {\n                    name: Propertylist.FileModel3D.name\n                  }\n                });\n              }\n            })]\n          }), _jsx(Text, {\n            children: \"Section 4\"\n          }), Section4.map(function (element) {\n            return _jsxs(_Fragment, {\n              children: [_jsx(\"label\", {\n                for: element.name,\n                style: {\n                  marginTop: 0\n                },\n                children: element.placeholder\n              }), _jsx(\"input\", {\n                id: element.name,\n                placeholder: element.placeholder,\n                onChange: function onChange(e) {\n                  return Onchange(e, element);\n                },\n                type: element.type,\n                style: element.style\n              })]\n            });\n          }), _jsx(Text, {\n            children: \"Section 5: Add RCC Drawing\"\n          }), _jsxs(View, {\n            children: [(state == null ? void 0 : state[Propertylist.RCCDrawing1.name]) && ((_Object$entries3 = Object.entries(state[Propertylist.RCCDrawing1.name])) == null ? void 0 : _Object$entries3.map(function (element, index) {\n              return _jsxs(View, {\n                children: [_jsx(\"label\", {\n                  for: Propertylist.RCCDrawing1.name,\n                  style: {\n                    marginTop: 0\n                  },\n                  children: Propertylist.RCCDrawing1.placeholder\n                }), _jsx(\"input\", {\n                  id: Propertylist.RCCDrawing1.name,\n                  placeholder: Propertylist.RCCDrawing1.placeholder,\n                  onChange: (function () {\n                    var _ref7 = _asyncToGenerator(function* (e) {\n                      return yield ConvertToBase64(index, Propertylist.RCCDrawing1.name, e);\n                    });\n                    return function (_x8) {\n                      return _ref7.apply(this, arguments);\n                    };\n                  }()),\n                  type: Propertylist.RCCDrawing1.type,\n                  style: Propertylist.RCCDrawing1.style\n                })]\n              });\n            })), _jsx(Button, {\n              title: \"Add\",\n              onPress: function onPress() {\n                dispatch({\n                  type: ADD_ARRAY,\n                  payload: {\n                    name: Propertylist.RCCDrawing1.name\n                  }\n                });\n              }\n            })]\n          }), _jsx(Text, {\n            children: \"Section 5\"\n          }), Section5.map(function (element) {\n            return _jsxs(_Fragment, {\n              children: [_jsx(\"label\", {\n                for: element.name,\n                style: {\n                  marginTop: 0\n                },\n                children: element.placeholder\n              }), _jsx(\"input\", {\n                id: element.name,\n                placeholder: element.placeholder,\n                onChange: function onChange(e) {\n                  return Onchange(e, element);\n                },\n                type: element.type,\n                style: element.style\n              })]\n            });\n          }), _jsx(Text, {\n            children: \"Section 5:Add Slab files\"\n          }), _jsxs(View, {\n            children: [(state == null ? void 0 : state[Propertylist.Slab.name]) && ((_Object$entries4 = Object.entries(state[Propertylist.Slab.name])) == null ? void 0 : _Object$entries4.map(function (element, index) {\n              return _jsxs(View, {\n                children: [_jsx(\"label\", {\n                  for: Propertylist.Slab.name,\n                  style: {\n                    marginTop: 0\n                  },\n                  children: Propertylist.Slab.placeholder\n                }), _jsx(\"input\", {\n                  id: Propertylist.Slab.name,\n                  placeholder: Propertylist.Slab.placeholder,\n                  onChange: (function () {\n                    var _ref8 = _asyncToGenerator(function* (e) {\n                      return yield ConvertToBase64(index, Propertylist.Slab.name, e);\n                    });\n                    return function (_x9) {\n                      return _ref8.apply(this, arguments);\n                    };\n                  }()),\n                  type: Propertylist.Slab.type,\n                  style: Propertylist.Slab.style\n                })]\n              });\n            })), _jsx(Button, {\n              title: \"Add\",\n              onPress: function onPress() {\n                dispatch({\n                  type: ADD_ARRAY,\n                  payload: {\n                    name: Propertylist.Slab.name\n                  }\n                });\n              }\n            })]\n          }), _jsx(Button, {\n            title: \"Submit\",\n            onPress: function onPress() {\n              return Modal1Bkcall();\n            }\n          }), _jsx(Button, {\n            title: \"Close\",\n            onPress: function onPress() {\n              return setModalVisible(false);\n            }\n          })]\n        })\n      })\n    }), _jsx(\"br\", {})]\n  });\n};\nexport default ProjectDetailsModal;","map":{"version":3,"names":["React","useReducer","useState","Modal","View","Button","Text","ScrollView","Propertylist","SchemaTypes","Section1","Section4","Section5","urlHead","blobToBase64","deepCopyObject","getIndex","endpoints","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ADD_PROPS_TYPE","REMOVE_PROPS_TYPE","ADD_ARRAY","UPDATE_PROP_VALUES","reducer","state","action","_action$payload","currentState","type","payload","name","_toConsumableArray","data","undefined","ContentType","value","fileName","push","index","ProjectDetailsModal","_ref","_Object$entries","_Object$entries2","_Object$entries3","_Object$entries4","navigation","route","_route$params","params","init","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useReducer","_useReducer2","dispatch","ConvertToBase64","_ref2","_asyncToGenerator","e","_e$target$files$","_e$target$files$2","_e$target$files$3","target","files","console","log","_x","_x2","_x3","apply","arguments","Modal1Bkcall","_ref3","Account","create","Onchange","_ref4","element","file","_e$target$files$4","_e$target$files$5","_x4","_x5","style","flex","justifyContent","alignItems","gap","children","title","onPress","navigate","animationType","transparent","visible","onRequestClose","backgroundColor","padding","borderRadius","map","for","marginTop","placeholder","id","onChange","PresentationDraw","Object","entries","_ref5","_x6","FileModel3D","_ref6","_x7","RCCDrawing1","_ref7","_x8","Slab","_ref8","_x9"],"sources":["D:/Logingfg - Copy/src/screens/Homepage.js"],"sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport { Modal, View, Button, Text, ScrollView } from 'react-native';\r\nimport { Propertylist, SchemaTypes, Section1, Section4, Section5, urlHead } from '../helper/extrapropertise';\r\nimport { blobToBase64, deepCopyObject, getIndex } from '../helper/helper';\r\nimport { endpoints } from '../Endpoints/endpoints';\r\n\r\nconst ADD_PROPS_TYPE = \"Add_Property\";\r\nconst REMOVE_PROPS_TYPE = \"Remove_Property\";\r\nconst ADD_ARRAY = \"push\"\r\nconst UPDATE_PROP_VALUES = \"update\"\r\n\r\nconst reducer = (state, action) => {\r\n  var currentState = deepCopyObject(state);\r\n  if ((action.type === ADD_ARRAY || action.type === UPDATE_PROP_VALUES) && state[action.payload.name]) {\r\n    currentState[action.payload.name] = [...state[action.payload.name]]\r\n  }\r\n  switch (action.type) {\r\n    case ADD_PROPS_TYPE:\r\n      let data = undefined\r\n      if (action.payload?.ContentType) {\r\n        data = { value: action.payload.value, ContentType: action.payload.ContentType, fileName: action.payload.fileName }\r\n      } else {\r\n        data = action.payload.value\r\n      }\r\n      currentState[action.payload.name] = data;\r\n      break;\r\n    case ADD_ARRAY:\r\n      if (!currentState[action.payload.name]) {\r\n\r\n        currentState[action.payload.name] = []\r\n      }\r\n      currentState[action.payload.name].push({})\r\n      break;\r\n    case UPDATE_PROP_VALUES:\r\n      currentState[action.payload.name][action.payload.index] =\r\n        { value: action.payload.value, ContentType: action.payload.ContentType, fileName: action.payload.fileName };\r\n      break\r\n    case REMOVE_PROPS_TYPE:\r\n      delete currentState[action.payload];\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return currentState;\r\n};\r\nconst ProjectDetailsModal = ({ navigation, route }) => {\r\n  const { data } = route?.params;\r\n  const init = data ? data : {};\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [state, dispatch] = useReducer(reducer, init);\r\n\r\n  const ConvertToBase64 = async (index, name, e) => {\r\n    let data = await blobToBase64(e.target.files[0])\r\n    console.log(e.target.files[0]?.type);\r\n    dispatch({\r\n      type: UPDATE_PROP_VALUES, payload:\r\n        { ContentType: e.target.files[0]?.type, index: index, name: name, value: data, fileName: e.target.files[0]?.name }\r\n    })\r\n  }\r\n\r\n  const Modal1Bkcall = async () => {\r\n\r\n    let data = endpoints.Account.create(state);\r\n    setModalVisible(false);\r\n    console.log(\"lets print form data\", data);\r\n    console.log(data);\r\n  };\r\n\r\n  const Onchange = async (e, element) => {\r\n    if (element.type === SchemaTypes.file) {\r\n      let data = await blobToBase64(e.target.files[0])\r\n      console.log(e.target.files[0]);\r\n      dispatch({ type: ADD_PROPS_TYPE, payload: { fileName: e.target.files[0]?.name, name: element.name, value: data, ContentType: e.target.files[0]?.type } })\r\n    } else {\r\n      dispatch({ type: ADD_PROPS_TYPE, payload: { name: element.name, value: e.target.value } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n      <Button title=\"Add new Project Details\" onPress={() => setModalVisible(true)} />\r\n      <Button title=\"Users\" onPress={() =>\r\n        navigation.navigate('Users')\r\n      } />\r\n      <Button title=\"Projects\" onPress={() =>\r\n        navigation.navigate('Projects')\r\n      } />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\r\n          <ScrollView style={{ backgroundColor: 'white', padding: 20, borderRadius: 10 }}>\r\n            <Text>Section 1: Client Basic Details</Text>\r\n            {\r\n              Section1.map(element => {\r\n                return (\r\n                  <>\r\n                    <label for={element.name} style={{ marginTop: 0 }}>{element.placeholder}</label>\r\n                    <input\r\n                      id={element.name}\r\n                      placeholder={element.placeholder}\r\n                      value={state[element.name] ? state[element.name] : \"\"}\r\n                      onChange={(e) =>\r\n                        Onchange(e, element)\r\n                      }\r\n                      type={element.type}\r\n                      style={element.style}\r\n                    />\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n            <Text>Section 2:Add Presentation Drawing</Text>\r\n            <View>\r\n              {\r\n                state?.[Propertylist.PresentationDraw.name] && Object.entries(state[Propertylist.PresentationDraw.name])?.map((element, index) => {\r\n                  return (\r\n                    <View >\r\n                      <label for={Propertylist.PresentationDraw.name} style={{ marginTop: 0 }}>{Propertylist.PresentationDraw.placeholder}</label>\r\n                      <input\r\n                        id={Propertylist.PresentationDraw.name}\r\n                        placeholder={Propertylist.PresentationDraw.placeholder}\r\n                        // value={element}\r\n                        onChange={async (e) =>\r\n                          await ConvertToBase64(index, Propertylist.PresentationDraw.name, e)\r\n                        }\r\n                        type={Propertylist.PresentationDraw.type}\r\n                        style={Propertylist.PresentationDraw.style}\r\n                      />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              <Button title=\"Add\" onPress={() => {\r\n                dispatch({ type: ADD_ARRAY, payload: { name: Propertylist.PresentationDraw.name } })\r\n              }} />\r\n            </View>\r\n            <Text>Section 3: Add 3d Models</Text>\r\n            <View>\r\n              {\r\n                state?.[Propertylist.FileModel3D.name] && Object.entries(state[Propertylist.FileModel3D.name])?.map((element, index) => {\r\n                  return (\r\n                    <View >\r\n                      <label for={Propertylist.FileModel3D.name} style={{ marginTop: 0 }}>{Propertylist.FileModel3D.placeholder}</label>\r\n                      <input\r\n                        id={Propertylist.FileModel3D.name}\r\n                        placeholder={Propertylist.FileModel3D.placeholder}\r\n                        // value={element}\r\n                        onChange={async (e) =>\r\n                          await ConvertToBase64(index, Propertylist.FileModel3D.name, e)\r\n                        }\r\n                        type={Propertylist.FileModel3D.type}\r\n                        style={Propertylist.FileModel3D.style}\r\n                      />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              <Button title=\"Add\" onPress={() => {\r\n                dispatch({ type: ADD_ARRAY, payload: { name: Propertylist.FileModel3D.name } })\r\n              }} />\r\n            </View>\r\n            <Text>Section 4</Text>\r\n            {\r\n              Section4.map(element => {\r\n                return (\r\n                  <>\r\n                    <label for={element.name} style={{ marginTop: 0 }}>{element.placeholder}</label>\r\n                    <input\r\n                      id={element.name}\r\n                      placeholder={element.placeholder}\r\n                      // value={state[element.name] ? state[element.name] : \"\"}\r\n                      onChange={(e) =>\r\n                        Onchange(e, element)\r\n                      }\r\n                      type={element.type}\r\n                      style={element.style}\r\n                    />\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n            <Text>Section 5: Add RCC Drawing</Text>\r\n            <View>\r\n              {\r\n                state?.[Propertylist.RCCDrawing1.name] && Object.entries(state[Propertylist.RCCDrawing1.name])?.map((element, index) => {\r\n                  return (\r\n                    <View >\r\n                      <label for={Propertylist.RCCDrawing1.name} style={{ marginTop: 0 }}>{Propertylist.RCCDrawing1.placeholder}</label>\r\n                      <input\r\n                        id={Propertylist.RCCDrawing1.name}\r\n                        placeholder={Propertylist.RCCDrawing1.placeholder}\r\n                        // value={element}\r\n                        onChange={async (e) =>\r\n                          await ConvertToBase64(index, Propertylist.RCCDrawing1.name, e)\r\n                        }\r\n                        type={Propertylist.RCCDrawing1.type}\r\n                        style={Propertylist.RCCDrawing1.style}\r\n                      />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              <Button title=\"Add\" onPress={() => {\r\n                dispatch({ type: ADD_ARRAY, payload: { name: Propertylist.RCCDrawing1.name } })\r\n              }} />\r\n            </View>\r\n            <Text>Section 5</Text>\r\n            {\r\n              Section5.map(element => {\r\n                return (\r\n                  <>\r\n                    <label for={element.name} style={{ marginTop: 0 }}>{element.placeholder}</label>\r\n                    <input\r\n                      id={element.name}\r\n                      placeholder={element.placeholder}\r\n                      // value={state[element.name] ? state[element.name] : \"\"}\r\n                      onChange={(e) =>\r\n                        Onchange(e, element)\r\n                      }\r\n                      type={element.type}\r\n                      style={element.style}\r\n                    />\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n            <Text>Section 5:Add Slab files</Text>\r\n            <View>\r\n              {\r\n                state?.[Propertylist.Slab.name] && Object.entries(state[Propertylist.Slab.name])?.map((element, index) => {\r\n                  return (\r\n                    <View >\r\n                      <label for={Propertylist.Slab.name} style={{ marginTop: 0 }}>{Propertylist.Slab.placeholder}</label>\r\n                      <input\r\n                        id={Propertylist.Slab.name}\r\n                        placeholder={Propertylist.Slab.placeholder}\r\n                        // value={element}\r\n                        onChange={async (e) =>\r\n                          await ConvertToBase64(index, Propertylist.Slab.name, e)\r\n                        }\r\n                        type={Propertylist.Slab.type}\r\n                        style={Propertylist.Slab.style}\r\n                      />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              <Button title=\"Add\" onPress={() => {\r\n                dispatch({ type: ADD_ARRAY, payload: { name: Propertylist.Slab.name } })\r\n              }} />\r\n            </View>\r\n            <Button title=\"Submit\" onPress={() => Modal1Bkcall()} />\r\n            <Button title=\"Close\" onPress={() => setModalVisible(false)} />\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n      <br></br>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProjectDetailsModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}