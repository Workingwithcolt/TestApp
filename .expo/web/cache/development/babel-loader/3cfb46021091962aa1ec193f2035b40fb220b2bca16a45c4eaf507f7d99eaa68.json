{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\";\nimport { NODATA } from \"../helper/extrapropertise\";\nimport DataView from \"../GenericComponent/Dataview\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ProjectDetailView } from \"./ProjectDetailView\";\nimport { Card, Text } from 'react-native-paper';\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\";\nimport { useState } from \"react\";\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { CommonClass } from \"../styles/Commonclass\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ResponsiveCard = function ResponsiveCard(_ref) {\n  var item = _ref.item,\n    navigation = _ref.navigation,\n    setSelectedItem = _ref.setSelectedItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var queryClient = useQueryClient();\n  var _useState3 = useState({\n      isloading: false,\n      error: undefined,\n      isSuccess: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  var updateItem = function () {\n    var _ref2 = _asyncToGenerator(function* (state) {\n      try {\n        yield endpoints.Account.update(state, {\n          _id: state._id\n        });\n        return state._id;\n      } catch (e) {\n        return Promise.reject(e.message);\n      }\n    });\n    return function updateItem(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var deleteItem = function () {\n    var _ref3 = _asyncToGenerator(function* (item) {\n      try {\n        setStatus({\n          isloading: true,\n          error: undefined,\n          isSuccess: false\n        });\n        yield endpoints.Account.delete(null, {\n          _id: item._id\n        });\n        setStatus({\n          isloading: false,\n          error: undefined,\n          isSuccess: true\n        });\n        queryClient.invalidateQueries({\n          predicate: function predicate(query) {\n            return query.queryKey.includes(UPDATE_ON_ACCOUNT);\n          }\n        });\n      } catch (e) {\n        setStatus({\n          isloading: false,\n          error: e.message,\n          isSuccess: false\n        });\n      }\n    });\n    return function deleteItem(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Card, {\n    style: {\n      width: \"100%\",\n      padding: 5\n    },\n    children: [_jsxs(Card.Content, {\n      children: [_jsxs(Text, {\n        variant: \"titleLarge\",\n        children: [\" \", item.clientName || NODATA]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.email]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.aadhar]\n      })]\n    }), modalVisible ? _jsx(ProjectModal, {\n      init: item,\n      onSubmit: updateItem,\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible\n    }) : _jsx(View, {}), status.isloading ? _jsx(View, {\n      children: _jsx(LoadingSpinner, {})\n    }) : status.error ? _jsx(View, {\n      children: status.error\n    }) : status.isSuccess ? _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Deleted Successfully !!\"\n      })\n    }) : _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: 'row',\n        justifyContent: \"flex-end\",\n        gap: 10\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: CommonClass.AddButton,\n        onPress: function onPress() {\n          return setSelectedItem(item);\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"account-details\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: CommonClass.AddButton,\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        children: _jsx(AntDesign, {\n          name: \"edit\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: CommonClass.AddButton,\n        onPress: _asyncToGenerator(function* () {\n          return yield deleteItem(item);\n        }),\n        children: _jsx(AntDesign, {\n          name: \"delete\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    })]\n  });\n};\nexport var Projects = function Projects(_ref5) {\n  var navigation = _ref5.navigation;\n  var queryKey = [UPDATE_ON_ACCOUNT];\n  var queryFunction = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var accounts = yield endpoints.Account.getAll();\n      return accounts;\n    });\n    return function queryFunction() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    return (current == null ? void 0 : current.email) + (current == null ? void 0 : current.clientName) + (current == null ? void 0 : current.aadhar) || \"\";\n  };\n  return _jsx(DataView, {\n    queryFunction: queryFunction,\n    queryKey: queryKey,\n    getSearchableValue: getValueToSearch,\n    Card: ResponsiveCard,\n    dataviewTitle: \"Projects\",\n    navigation: navigation,\n    DetailedElement: ProjectDetailView\n  });\n};","map":{"version":3,"names":["UPDATE_ON_ACCOUNT","endpoints","NODATA","DataView","Button","SafeAreaView","View","TouchableOpacity","ProjectDetailView","Card","Text","ProjectModal","useState","LoadingSpinner","useQueryClient","CommonClass","AntDesign","MaterialCommunityIcons","jsxs","_jsxs","jsx","_jsx","ResponsiveCard","_ref","item","navigation","setSelectedItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","queryClient","_useState3","isloading","error","undefined","isSuccess","_useState4","status","setStatus","updateItem","_ref2","_asyncToGenerator","state","Account","update","_id","e","Promise","reject","message","_x","apply","arguments","deleteItem","_ref3","delete","invalidateQueries","predicate","query","queryKey","includes","_x2","style","width","padding","children","Content","variant","clientName","email","aadhar","init","onSubmit","display","flexDirection","justifyContent","gap","AddButton","onPress","name","size","color","Projects","_ref5","queryFunction","_ref6","accounts","getAll","getValueToSearch","current","getSearchableValue","dataviewTitle","DetailedElement"],"sources":["D:/ReactNativeApplication/TestApp/src/screens/Projects.js"],"sourcesContent":["\r\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\"\r\nimport { NODATA } from \"../helper/extrapropertise\"\r\nimport DataView from \"../GenericComponent/Dataview\"\r\n// import { Button, SafeAreaView, View } from \"react-native-web\"\r\nimport { Button, SafeAreaView, View, TouchableOpacity } from \"react-native\"\r\nimport { ProjectDetailView } from \"./ProjectDetailView\"\r\nimport { Card, Text } from 'react-native-paper';\r\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\"\r\nimport { useState } from \"react\"\r\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\"\r\nimport { useQueryClient } from \"@tanstack/react-query\"\r\nimport { CommonClass } from \"../styles/Commonclass\"\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst ResponsiveCard = ({ item, navigation, setSelectedItem }) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const queryClient = useQueryClient()\r\n    const [status, setStatus] = useState({\r\n        isloading: false, error: undefined, isSuccess: false\r\n    })\r\n\r\n    const updateItem = async (state) => {\r\n        try {\r\n            await endpoints.Account.update(state, { _id: state._id })\r\n            return state._id;\r\n        } catch (e) {\r\n            return Promise.reject(e.message)\r\n        }\r\n    }\r\n    const deleteItem = async (item) => {\r\n        try {\r\n            setStatus({\r\n                isloading: true, error: undefined, isSuccess: false\r\n            })\r\n            await endpoints.Account.delete(null, { _id: item._id })\r\n            setStatus({\r\n                isloading: false, error: undefined, isSuccess: true\r\n            })\r\n            queryClient.invalidateQueries({\r\n                predicate: (query) =>\r\n                    query.queryKey.includes(UPDATE_ON_ACCOUNT)\r\n            })\r\n        } catch (e) {\r\n            setStatus({\r\n                isloading: false, error: e.message, isSuccess: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: \"100%\", padding: 5 }}>\r\n            <Card.Content>\r\n                <Text variant=\"titleLarge\"> {item.clientName || NODATA}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.email}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.aadhar}</Text>\r\n            </Card.Content>\r\n            {\r\n                modalVisible ?\r\n                    <ProjectModal\r\n                        init={item}\r\n                        onSubmit={updateItem}\r\n                        modalVisible={modalVisible}\r\n                        setModalVisible={setModalVisible}\r\n                    />\r\n                    : <View></View>\r\n            }\r\n\r\n            {\r\n                status.isloading ?\r\n                    <View>\r\n                        <LoadingSpinner />\r\n                    </View >\r\n                    : status.error ? (<View>\r\n                        {status.error}\r\n                    </View>)\r\n                        : status.isSuccess ?\r\n                            (<View>\r\n                                <Text>Deleted Successfully !!</Text>\r\n                            </View>)\r\n                            :\r\n                            (<View style={{ display: \"flex\", flexDirection: 'row', justifyContent: \"flex-end\", gap: 10 }}>\r\n                                <TouchableOpacity style={CommonClass.AddButton} onPress={() => setSelectedItem(item)} >\r\n                                    <MaterialCommunityIcons name=\"account-details\" size={24} color=\"black\" />\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={CommonClass.AddButton} onPress={() => setModalVisible(true)}>\r\n                                    <AntDesign name=\"edit\" size={24} color=\"black\" />\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={CommonClass.AddButton} onPress={async () => await deleteItem(item)}  >\r\n                                    <AntDesign name=\"delete\" size={24} color=\"black\" />\r\n                                </TouchableOpacity>\r\n                            </View>)\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const Projects = ({ navigation }) => {\r\n    const queryKey = [UPDATE_ON_ACCOUNT]\r\n    const queryFunction = async () => {\r\n        var accounts = await endpoints.Account.getAll()\r\n        return accounts\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        return (\r\n            (current?.email +\r\n                current?.clientName +\r\n                current?.aadhar) || \"\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <DataView\r\n            queryFunction={queryFunction}\r\n            queryKey={queryKey}\r\n            getSearchableValue={getValueToSearch}\r\n            Card={ResponsiveCard}\r\n            dataviewTitle={\"Projects\"}\r\n            navigation={navigation}\r\n            DetailedElement={ProjectDetailView}\r\n        />\r\n    )\r\n\r\n}"],"mappings":";;AACA,SAASA,iBAAiB,EAAEC,SAAS;AACrC,SAASC,MAAM;AACf,OAAOC,QAAQ;AAAoC,OAAAC,MAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAGnD,SAASC,iBAAiB;AAC1B,SAASC,IAAI,EAAEC,IAAI,QAAQ,oBAAoB;AAC/C,SAASC,YAAY;AACrB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc;AACrB,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW;AACpB,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,sBAAsB,QAAQ,oBAAoB;AAAC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE5D,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAA8C;EAAA,IAAxCC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EACvD,IAAAC,SAAA,GAAwCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAMI,WAAW,GAAGlB,cAAc,CAAC,CAAC;EACpC,IAAAmB,UAAA,GAA4BrB,QAAQ,CAAC;MACjCsB,SAAS,EAAE,KAAK;MAAEC,KAAK,EAAEC,SAAS;MAAEC,SAAS,EAAE;IACnD,CAAC,CAAC;IAAAC,UAAA,GAAAT,cAAA,CAAAI,UAAA;IAFKM,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAIxB,IAAMG,UAAU;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;MAChC,IAAI;QACA,MAAM3C,SAAS,CAAC4C,OAAO,CAACC,MAAM,CAACF,KAAK,EAAE;UAAEG,GAAG,EAAEH,KAAK,CAACG;QAAI,CAAC,CAAC;QACzD,OAAOH,KAAK,CAACG,GAAG;MACpB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACR,OAAOC,OAAO,CAACC,MAAM,CAACF,CAAC,CAACG,OAAO,CAAC;MACpC;IACJ,CAAC;IAAA,gBAPKV,UAAUA,CAAAW,EAAA;MAAA,OAAAV,KAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOf;EACD,IAAMC,UAAU;IAAA,IAAAC,KAAA,GAAAb,iBAAA,CAAG,WAAOnB,IAAI,EAAK;MAC/B,IAAI;QACAgB,SAAS,CAAC;UACNN,SAAS,EAAE,IAAI;UAAEC,KAAK,EAAEC,SAAS;UAAEC,SAAS,EAAE;QAClD,CAAC,CAAC;QACF,MAAMpC,SAAS,CAAC4C,OAAO,CAACY,MAAM,CAAC,IAAI,EAAE;UAAEV,GAAG,EAAEvB,IAAI,CAACuB;QAAI,CAAC,CAAC;QACvDP,SAAS,CAAC;UACNN,SAAS,EAAE,KAAK;UAAEC,KAAK,EAAEC,SAAS;UAAEC,SAAS,EAAE;QACnD,CAAC,CAAC;QACFL,WAAW,CAAC0B,iBAAiB,CAAC;UAC1BC,SAAS,EAAE,SAAAA,UAACC,KAAK;YAAA,OACbA,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAAC9D,iBAAiB,CAAC;UAAA;QAClD,CAAC,CAAC;MACN,CAAC,CAAC,OAAOgD,CAAC,EAAE;QACRR,SAAS,CAAC;UACNN,SAAS,EAAE,KAAK;UAAEC,KAAK,EAAEa,CAAC,CAACG,OAAO;UAAEd,SAAS,EAAE;QACnD,CAAC,CAAC;MACN;IACJ,CAAC;IAAA,gBAlBKkB,UAAUA,CAAAQ,GAAA;MAAA,OAAAP,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAkBf;EAED,OACInC,KAAA,CAACV,IAAI;IAACuD,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,GACvChD,KAAA,CAACV,IAAI,CAAC2D,OAAO;MAAAD,QAAA,GACThD,KAAA,CAACT,IAAI;QAAC2D,OAAO,EAAC,YAAY;QAAAF,QAAA,GAAC,GAAC,EAAC3C,IAAI,CAAC8C,UAAU,IAAIpE,MAAM;MAAA,CAAO,CAAC,EAC9DiB,KAAA,CAACT,IAAI;QAAC2D,OAAO,EAAC,YAAY;QAAAF,QAAA,GAAC,GAAC,EAAC3C,IAAI,CAAC+C,KAAK;MAAA,CAAO,CAAC,EAC/CpD,KAAA,CAACT,IAAI;QAAC2D,OAAO,EAAC,YAAY;QAAAF,QAAA,GAAC,GAAC,EAAC3C,IAAI,CAACgD,MAAM;MAAA,CAAO,CAAC;IAAA,CACtC,CAAC,EAEX1C,YAAY,GACRT,IAAA,CAACV,YAAY;MACT8D,IAAI,EAAEjD,IAAK;MACXkD,QAAQ,EAAEjC,UAAW;MACrBX,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB,CACpC,CAAC,GACAV,IAAA,CAACf,IAAI,IAAO,CAAC,EAInBiC,MAAM,CAACL,SAAS,GACZb,IAAA,CAACf,IAAI;MAAA6D,QAAA,EACD9C,IAAA,CAACR,cAAc,IAAE;IAAC,CACf,CAAC,GACN0B,MAAM,CAACJ,KAAK,GAAId,IAAA,CAACf,IAAI;MAAA6D,QAAA,EAClB5B,MAAM,CAACJ;IAAK,CACX,CAAC,GACDI,MAAM,CAACF,SAAS,GACbhB,IAAA,CAACf,IAAI;MAAA6D,QAAA,EACF9C,IAAA,CAACX,IAAI;QAAAyD,QAAA,EAAC;MAAuB,CAAM;IAAC,CAClC,CAAC,GAENhD,KAAA,CAACb,IAAI;MAAC0D,KAAK,EAAE;QAAEW,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,KAAK;QAAEC,cAAc,EAAE,UAAU;QAAEC,GAAG,EAAE;MAAG,CAAE;MAAAX,QAAA,GACzF9C,IAAA,CAACd,gBAAgB;QAACyD,KAAK,EAAEjD,WAAW,CAACgE,SAAU;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMtD,eAAe,CAACF,IAAI,CAAC;QAAA,CAAC;QAAA2C,QAAA,EACjF9C,IAAA,CAACJ,sBAAsB;UAACgE,IAAI,EAAC,iBAAiB;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CAC3D,CAAC,EACnB9D,IAAA,CAACd,gBAAgB;QAACyD,KAAK,EAAEjD,WAAW,CAACgE,SAAU;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjD,eAAe,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAoC,QAAA,EACjF9C,IAAA,CAACL,SAAS;UAACiE,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CACnC,CAAC,EACnB9D,IAAA,CAACd,gBAAgB;QAACyD,KAAK,EAAEjD,WAAW,CAACgE,SAAU;QAACC,OAAO,EAAArC,iBAAA,CAAE;UAAA,aAAkBY,UAAU,CAAC/B,IAAI,CAAC;QAAA,EAAC;QAAA2C,QAAA,EACxF9C,IAAA,CAACL,SAAS;UAACiE,IAAI,EAAC,QAAQ;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CACrC,CAAC;IAAA,CACjB,CAAE;EAAA,CAEtB,CAAC;AAEf,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,KAAA,EAAuB;EAAA,IAAjB5D,UAAU,GAAA4D,KAAA,CAAV5D,UAAU;EACjC,IAAMoC,QAAQ,GAAG,CAAC7D,iBAAiB,CAAC;EACpC,IAAMsF,aAAa;IAAA,IAAAC,KAAA,GAAA5C,iBAAA,CAAG,aAAY;MAC9B,IAAI6C,QAAQ,SAASvF,SAAS,CAAC4C,OAAO,CAAC4C,MAAM,CAAC,CAAC;MAC/C,OAAOD,QAAQ;IACnB,CAAC;IAAA,gBAHKF,aAAaA,CAAA;MAAA,OAAAC,KAAA,CAAAlC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGlB;EACD,IAAMoC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;IAClC,OACK,CAAAA,OAAO,oBAAPA,OAAO,CAAEpB,KAAK,KACXoB,OAAO,oBAAPA,OAAO,CAAErB,UAAU,KACnBqB,OAAO,oBAAPA,OAAO,CAAEnB,MAAM,KAAK,EAAE;EAElC,CAAC;EAED,OACInD,IAAA,CAAClB,QAAQ;IACLmF,aAAa,EAAEA,aAAc;IAC7BzB,QAAQ,EAAEA,QAAS;IACnB+B,kBAAkB,EAAEF,gBAAiB;IACrCjF,IAAI,EAAEa,cAAe;IACrBuE,aAAa,EAAE,UAAW;IAC1BpE,UAAU,EAAEA,UAAW;IACvBqE,eAAe,EAAEtF;EAAkB,CACtC,CAAC;AAGV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}