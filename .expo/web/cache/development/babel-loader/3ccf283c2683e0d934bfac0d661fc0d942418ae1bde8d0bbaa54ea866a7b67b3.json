{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport LoadingSpinner from \"./LoadingSpinneer\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { dataview } from \"../styles/Dataview\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DataView(_ref) {\n  var queryFunction = _ref.queryFunction,\n    queryKey = _ref.queryKey,\n    getSearchableValue = _ref.getSearchableValue,\n    Card = _ref.Card,\n    DetailedElement = _ref.DetailedElement,\n    newDataButton = _ref.newDataButton;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchString = _useState2[0],\n    setSearchString = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItem = _useState4[0],\n    setSelectedItem = _useState4[1];\n  var _useQuery = useQuery({\n      queryKey: queryKey,\n      queryFn: function () {\n        var _queryFn = _asyncToGenerator(function* () {\n          return yield queryFunction();\n        });\n        function queryFn() {\n          return _queryFn.apply(this, arguments);\n        }\n        return queryFn;\n      }()\n    }),\n    data = _useQuery.data,\n    isError = _useQuery.isError,\n    isLoading = _useQuery.isLoading,\n    error = _useQuery.error;\n  if (data && searchString !== \"\") {\n    data = data.filter(function (current) {\n      var valueToSearchIn = getSearchableValue(current).toLowerCase();\n      var valueToSearch = searchString.toLowerCase();\n      return valueToSearchIn.includes(valueToSearch);\n    });\n  }\n  if (selectedItem && DetailedElement) {\n    return _jsx(DetailedElement, {\n      item: selectedItem,\n      setSelectedItem: setSelectedItem\n    });\n  }\n  if (isLoading) {\n    return _jsx(View, {\n      children: _jsx(LoadingSpinner, {})\n    });\n  }\n  if (isError) {\n    return _jsx(View, {\n      children: _jsx(View, {\n        role: \"alert\",\n        children: error\n      })\n    });\n  }\n  if (data) {\n    return _jsxs(SafeAreaView, {\n      style: dataview.container,\n      children: [_jsx(View, {\n        children: dataviewTitle\n      }), _jsxs(View, {\n        style: dataview.stickyInput,\n        children: [_jsx(TextInput, {\n          style: dataview.input,\n          onChange: function onChange(e) {\n            return setSearchString(e.target.value);\n          },\n          placeholder: \"Search\"\n        }), newDataButton ? _jsx(View, {\n          style: dataview.textStyle,\n          children: newDataButton\n        }) : null]\n      }), _jsx(View, {\n        style: dataview.heightAndOverflow,\n        children: _jsx(ScrollView, {\n          children: _jsx(View, {\n            children: data && data.length === 0 ? _jsx(View, {\n              children: \"No Data To Display\"\n            }) : _jsx(View, {\n              children: data.map(function (item, index) {\n                return _jsx(View, {\n                  style: dataview.cardContainer,\n                  onClick: function onClick() {\n                    return setSelectedItem(item);\n                  },\n                  children: _jsx(Card, {\n                    item: item\n                  })\n                }, index);\n              })\n            })\n          })\n        })\n      })]\n    });\n  }\n}\nexport default DataView;","map":{"version":3,"names":["useQuery","useState","LoadingSpinner","TextInput","View","SafeAreaView","ScrollView","dataview","jsx","_jsx","jsxs","_jsxs","DataView","_ref","queryFunction","queryKey","getSearchableValue","Card","DetailedElement","newDataButton","_useState","_useState2","_slicedToArray","searchString","setSearchString","_useState3","undefined","_useState4","selectedItem","setSelectedItem","_useQuery","queryFn","_queryFn","_asyncToGenerator","apply","arguments","data","isError","isLoading","error","filter","current","valueToSearchIn","toLowerCase","valueToSearch","includes","item","children","role","style","container","dataviewTitle","stickyInput","input","onChange","e","target","value","placeholder","textStyle","heightAndOverflow","length","map","index","cardContainer","onClick"],"sources":["D:/Logingfg - Copy/src/GenericComponent/Dataview.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from \"./LoadingSpinneer\";\r\nimport { TextInput, View } from \"react-native-web\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { ScrollView } from \"react-native\";\r\nimport { dataview } from \"../styles/Dataview\";\r\n\r\n\r\nfunction DataView({ queryFunction, queryKey, getSearchableValue, Card, DetailedElement, newDataButton, }) {\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    const [selectedItem, setSelectedItem] = useState(undefined);\r\n\r\n    var { data, isError, isLoading, error } = useQuery({ queryKey: queryKey, queryFn: async () => await queryFunction() });\r\n\r\n    if (data && searchString !== \"\") {\r\n        data = data.filter((current) => {\r\n            var valueToSearchIn = getSearchableValue(current).toLowerCase();\r\n            var valueToSearch = searchString.toLowerCase();\r\n            return valueToSearchIn.includes(valueToSearch);\r\n        })\r\n    }\r\n\r\n    if (selectedItem && DetailedElement) {\r\n        return (\r\n            <DetailedElement item={selectedItem} setSelectedItem={setSelectedItem} />\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View  >\r\n                <LoadingSpinner />\r\n            </View >\r\n        )\r\n    }\r\n\r\n    if (isError) {\r\n        return (\r\n            <View >\r\n                <View role=\"alert\">\r\n                    {error}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    if (data) {\r\n        return (\r\n            <SafeAreaView style={dataview.container}>\r\n                <View >\r\n                   {dataviewTitle}\r\n                </View>\r\n                <View style={dataview.stickyInput} >\r\n                    <TextInput\r\n                        style={dataview.input}\r\n                        onChange={(e) => setSearchString(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                    />\r\n                    {\r\n                        newDataButton ?\r\n                            <View style={dataview.textStyle}>\r\n                                {newDataButton}\r\n                            </View> : null\r\n                    }\r\n                </View>\r\n                <View style={dataview.heightAndOverflow}>\r\n                    <ScrollView  >\r\n                        <View >\r\n                            {\r\n                                data && data.length === 0 ?\r\n                                    <View >\r\n                                        No Data To Display\r\n                                    </View>\r\n                                    :\r\n                                    <View >\r\n                                        {\r\n                                            data.map((item, index) =>\r\n                                                <View style={dataview.cardContainer} key={index} onClick={() => setSelectedItem(item)}>\r\n                                                    <Card item={item}></Card>\r\n                                                </View>\r\n                                            )\r\n                                        }\r\n                                    </View>\r\n                            }\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            </SafeAreaView >\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}