{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { endpoints } from \"../Endpoints/endpoints\";\nimport { users } from \"../helper/extrapropertise\";\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\";\nimport DataView from \"../GenericComponent/Dataview\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Users = function Users() {\n  var queryKey = [users];\n  var queryFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var data = yield endpoints.Users.getAll();\n      console.log(data);\n      return data;\n    });\n    return function queryFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    return \"chetan\";\n  };\n  var _useQuery = useQuery({\n      queryKey: queryKey,\n      queryFn: queryFunction\n    }),\n    data = _useQuery.data;\n  console.log(data);\n  return _jsx(View, {\n    children: \"chean\"\n  });\n};","map":{"version":3,"names":["useQuery","endpoints","users","LoadingSpinner","DataView","View","jsx","_jsx","Users","queryKey","queryFunction","_ref","_asyncToGenerator","data","getAll","console","log","apply","arguments","getValueToSearch","current","_useQuery","queryFn","children"],"sources":["D:/Logingfg - Copy/src/screens/Users.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { endpoints } from \"../Endpoints/endpoints\"\r\nimport { users } from \"../helper/extrapropertise\"\r\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\"\r\nimport DataView from \"../GenericComponent/Dataview\"\r\nimport { View } from \"react-native-web\"\r\n\r\nexport const Users = () => {\r\n    const queryKey = [users]\r\n    const queryFunction = async () => {\r\n        var data = await endpoints.Users.getAll()\r\n        console.log(data);\r\n        return data\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        return (\r\n            \"chetan\"\r\n        )\r\n    }\r\n  const {data} = useQuery({queryKey:queryKey,queryFn:queryFunction})\r\n  console.log(data); \r\n  return (\r\n        // <DataView\r\n        //     queryFunction={queryFunction}\r\n        //     queryKey={queryKey}\r\n        //     getSearchableValue={getValueToSearch}\r\n        //     Card={<View>Chetan</View>}\r\n        // />\r\n        <View>chean</View>\r\n    )\r\n\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS;AAClB,SAASC,KAAK;AACd,OAAOC,cAAc;AACrB,OAAOC,QAAQ;AAAoC,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EACvB,IAAMC,QAAQ,GAAG,CAACP,KAAK,CAAC;EACxB,IAAMQ,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAIC,IAAI,SAASZ,SAAS,CAACO,KAAK,CAACM,MAAM,CAAC,CAAC;MACzCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI;IACf,CAAC;IAAA,gBAJKH,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAIlB;EACD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;IAClC,OACI,QAAQ;EAEhB,CAAC;EACH,IAAAC,SAAA,GAAerB,QAAQ,CAAC;MAACS,QAAQ,EAACA,QAAQ;MAACa,OAAO,EAACZ;IAAa,CAAC,CAAC;IAA3DG,IAAI,GAAAQ,SAAA,CAAJR,IAAI;EACXE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,OAOMN,IAAA,CAACF,IAAI;IAAAkB,QAAA,EAAC;EAAK,CAAM,CAAC;AAG1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}