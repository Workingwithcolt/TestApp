{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\";\nimport { NODATA, users } from \"../helper/extrapropertise\";\nimport DataView from \"../GenericComponent/Dataview\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { dataview } from \"../styles/Dataview\";\nimport { ProjectDetailView } from \"./ProjectDetailView\";\nimport { Card, Text } from 'react-native-paper';\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\";\nimport { useState } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ResponsiveCard = function ResponsiveCard(_ref) {\n  var item = _ref.item,\n    navigation = _ref.navigation,\n    setSelectedItem = _ref.setSelectedItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState({\n      isloading: false,\n      error: undefined,\n      isSuccess: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  var updateItem = function () {\n    var _ref2 = _asyncToGenerator(function* (state) {\n      try {\n        yield endpoints.Account.update(state, {\n          _id: state._id\n        });\n        return state._id;\n      } catch (e) {\n        return Promise.reject(e.message);\n      }\n    });\n    return function updateItem(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var deleteItem = function () {\n    var _ref3 = _asyncToGenerator(function* (item) {\n      try {\n        setStatus({\n          isloading: true,\n          error: undefined,\n          isSuccess: false\n        });\n        yield endpoints.Account.delete(null, {\n          _id: item._id\n        });\n        setStatus({\n          isloading: false,\n          error: e.message,\n          isSuccess: true\n        });\n      } catch (e) {\n        setStatus({\n          isloading: false,\n          error: e.message,\n          isSuccess: false\n        });\n      }\n    });\n    return function deleteItem(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Card, {\n    style: {\n      width: \"100%\"\n    },\n    children: [_jsxs(Card.Content, {\n      children: [_jsxs(Text, {\n        variant: \"titleLarge\",\n        children: [\" \", item.clientName || NODATA]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.email]\n      }), _jsxs(Text, {\n        variant: \"bodyMedium\",\n        children: [\" \", item.aadhar]\n      })]\n    }), modalVisible ? _jsx(ProjectModal, {\n      init: item,\n      onSubmit: updateItem,\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible\n    }) : _jsx(_Fragment, {}), _jsx(Card.Actions, {\n      children: isPending ? _jsx(View, {\n        children: _jsx(LoadingSpinner, {\n          size: \"large\"\n        })\n      }) : error ? _jsx(View, {\n        children: error\n      }) : isSuccess ? _jsx(View, {\n        children: \"Added Successfully !!\"\n      }) : _jsxs(_Fragment, {\n        children: [\" \", _jsx(Button, {\n          title: \"Detail\",\n          onPress: function onPress() {\n            return setSelectedItem(item);\n          }\n        }), _jsx(Button, {\n          title: \"update\",\n          onPress: function onPress() {\n            return setModalVisible(true);\n          }\n        }), _jsx(Button, {\n          title: \"delete\",\n          onPress: _asyncToGenerator(function* () {\n            return yield deleteItem(item);\n          })\n        })]\n      })\n    })]\n  });\n};\nexport var Projects = function Projects(_ref5) {\n  var navigation = _ref5.navigation;\n  var queryKey = [UPDATE_ON_ACCOUNT];\n  var queryFunction = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var accounts = yield endpoints.Account.getAll();\n      console.log(accounts);\n      return accounts;\n    });\n    return function queryFunction() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    console.log(current);\n    return (current == null ? void 0 : current.email) + (current == null ? void 0 : current.clientName) + (current == null ? void 0 : current.aadhar) || \"\";\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsx(DataView, {\n      queryFunction: queryFunction,\n      queryKey: queryKey,\n      getSearchableValue: getValueToSearch,\n      Card: ResponsiveCard,\n      dataviewTitle: \"Projects\",\n      navigation: navigation,\n      DetailedElement: ProjectDetailView\n    })\n  });\n};","map":{"version":3,"names":["UPDATE_ON_ACCOUNT","endpoints","NODATA","users","DataView","Button","SafeAreaView","View","dataview","ProjectDetailView","Card","Text","ProjectModal","useState","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ResponsiveCard","_ref","item","navigation","setSelectedItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","isloading","error","undefined","isSuccess","_useState4","status","setStatus","updateItem","_ref2","_asyncToGenerator","state","Account","update","_id","e","Promise","reject","message","_x","apply","arguments","deleteItem","_ref3","delete","_x2","style","width","children","Content","variant","clientName","email","aadhar","init","onSubmit","Actions","isPending","LoadingSpinner","size","title","onPress","Projects","_ref5","queryKey","queryFunction","_ref6","accounts","getAll","console","log","getValueToSearch","current","getSearchableValue","dataviewTitle","DetailedElement"],"sources":["D:/Logingfg - Copy/src/screens/Projects.js"],"sourcesContent":["\r\nimport { UPDATE_ON_ACCOUNT, endpoints } from \"../Endpoints/endpoints\"\r\nimport { NODATA, users } from \"../helper/extrapropertise\"\r\nimport DataView from \"../GenericComponent/Dataview\"\r\nimport { Button, SafeAreaView, View } from \"react-native-web\"\r\nimport { dataview } from \"../styles/Dataview\"\r\nimport { ProjectDetailView } from \"./ProjectDetailView\"\r\nimport { Card, Text } from 'react-native-paper';\r\nimport { ProjectModal } from \"../GenericComponent/ProjectModal\"\r\nimport { useState } from \"react\"\r\n\r\nconst ResponsiveCard = ({ item, navigation, setSelectedItem }) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [status, setStatus] = useState({\r\n        isloading: false, error: undefined, isSuccess: false\r\n    })\r\n\r\n    const updateItem = async (state) => {\r\n        try {\r\n            await endpoints.Account.update(state, { _id: state._id })\r\n            return state._id;\r\n        } catch (e) {\r\n            return Promise.reject(e.message)\r\n        }\r\n    }\r\n    const deleteItem = async (item) => {\r\n        try {\r\n            setStatus({\r\n                isloading: true, error: undefined, isSuccess: false\r\n            })\r\n            await endpoints.Account.delete(null, { _id: item._id })\r\n            setStatus({\r\n                isloading: false, error: e.message, isSuccess: true\r\n            })\r\n        } catch (e) {\r\n            setStatus({\r\n                isloading: false, error: e.message, isSuccess: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: \"100%\" }}>\r\n            <Card.Content>\r\n                <Text variant=\"titleLarge\"> {item.clientName || NODATA}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.email}</Text>\r\n                <Text variant=\"bodyMedium\"> {item.aadhar}</Text>\r\n            </Card.Content>\r\n            {\r\n                modalVisible ?\r\n                    <ProjectModal\r\n                        init={item}\r\n                        onSubmit={updateItem}\r\n                        modalVisible={modalVisible}\r\n                        setModalVisible={setModalVisible}\r\n                    />\r\n                    : <></>\r\n            }\r\n            <Card.Actions>\r\n\r\n                {\r\n                    isPending ?\r\n                        <View>\r\n                            <LoadingSpinner size='large' />\r\n                        </View >\r\n                        : error ? (<View>\r\n                            {error}\r\n                        </View>)\r\n                            : isSuccess ?\r\n                                (<View>\r\n                                    Added Successfully !!\r\n                                </View>)\r\n                                :\r\n                                (<> <Button title=\"Detail\" onPress={() => setSelectedItem(item)} />\r\n                                    <Button title=\"update\" onPress={() => setModalVisible(true)} />\r\n                                    <Button title=\"delete\" onPress={async () => await deleteItem(item)} /></>)}\r\n            </Card.Actions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const Projects = ({ navigation }) => {\r\n    const queryKey = [UPDATE_ON_ACCOUNT]\r\n    const queryFunction = async () => {\r\n        var accounts = await endpoints.Account.getAll()\r\n        console.log(accounts);\r\n        return accounts\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        console.log(current);\r\n        return (\r\n            (current?.email +\r\n                current?.clientName +\r\n                current?.aadhar) || \"\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <DataView\r\n                queryFunction={queryFunction}\r\n                queryKey={queryKey}\r\n                getSearchableValue={getValueToSearch}\r\n                Card={ResponsiveCard}\r\n                dataviewTitle={\"Projects\"}\r\n                navigation={navigation}\r\n                DetailedElement={ProjectDetailView}\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}