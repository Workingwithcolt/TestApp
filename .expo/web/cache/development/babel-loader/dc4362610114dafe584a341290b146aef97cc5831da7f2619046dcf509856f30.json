{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport LoadingSpinner from \"./LoadingSpinneer\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTailwind } from \"tailwind-rn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DataView(_ref) {\n  var queryFunction = _ref.queryFunction,\n    queryKey = _ref.queryKey,\n    getSearchableValue = _ref.getSearchableValue,\n    Card = _ref.Card,\n    DetailedElement = _ref.DetailedElement,\n    newDataButton = _ref.newDataButton;\n  var tailwind = useTailwind();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchString = _useState2[0],\n    setSearchString = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItem = _useState4[0],\n    setSelectedItem = _useState4[1];\n  var _useQuery = useQuery(queryKey, _asyncToGenerator(function* () {\n      return yield queryFunction();\n    })),\n    data = _useQuery.data,\n    isError = _useQuery.isError,\n    isLoading = _useQuery.isLoading,\n    error = _useQuery.error;\n  if (data && searchString !== \"\") {\n    data = data.filter(function (current) {\n      var valueToSearchIn = getSearchableValue(current).toLowerCase();\n      var valueToSearch = searchString.toLowerCase();\n      return valueToSearchIn.includes(valueToSearch);\n    });\n  }\n  if (selectedItem && DetailedElement) {\n    return _jsx(DetailedElement, {\n      item: selectedItem,\n      setSelectedItem: setSelectedItem\n    });\n  }\n  if (isLoading) {\n    return _jsx(View, {\n      style: tailwind(\"flex w-full h-full justify-center items-center\"),\n      children: _jsx(LoadingSpinner, {})\n    });\n  }\n  if (isError) {\n    return _jsx(View, {\n      style: tailwind(\"flex flex-col p-2\"),\n      children: _jsx(View, {\n        style: tailwind(\"p-4 mb-4 text-sm text-white text-center rounded-lg bg-gray-700\"),\n        role: \"alert\",\n        children: error\n      })\n    });\n  }\n  if (data) {\n    return _jsxs(View, {\n      style: tailwind(\"flex flex-col gap-2 h-full\"),\n      children: [_jsxs(View, {\n        style: tailwind(\"flex flex-wrap w-full items-center gap-5 mb-2\"),\n        children: [_jsx(View, {\n          style: tailwind(\"mx-auto\"),\n          children: _jsxs(View, {\n            children: [\"Count: \", data.length, \" \"]\n          })\n        }), _jsx(\"input\", {\n          style: tailwind(\"flex-grow border mt-4 mb-4 text-white text-sm rounded-sm focus:ring-primary-600 focus:border-primary-600 block p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\"),\n          onChange: function onChange(e) {\n            return setSearchString(e.target.value);\n          },\n          placeholder: \"Search\"\n        }), _jsx(View, {\n          style: tailwind(\"mx-auto\"),\n          children: newDataButton\n        })]\n      }), _jsx(View, {\n        style: tailwind(\"flex-1\"),\n        children: _jsx(View, {\n          style: tailwind(\"h-full overflow-y-scroll\"),\n          children: data && data.length === 0 ? _jsx(View, {\n            style: tailwind(\"flex w-full justify-center\"),\n            children: \"No Data To Display\"\n          }) : _jsx(View, {\n            style: tailwind(\"grid gap-2 lg:grid-cols-4 xl:grid-cols-4 md:grid-cols-3 sm:grid-cols-1\"),\n            children: data.map(function (item, index) {\n              return _jsx(View, {\n                style: tailwind(\"w-full\"),\n                onClick: function onClick() {\n                  return setSelectedItem(item);\n                },\n                children: _jsx(Card, {\n                  item: item\n                })\n              }, index);\n            })\n          })\n        })\n      })]\n    });\n  }\n}\nexport default DataView;","map":{"version":3,"names":["useQuery","useState","LoadingSpinner","View","useTailwind","jsx","_jsx","jsxs","_jsxs","DataView","_ref","queryFunction","queryKey","getSearchableValue","Card","DetailedElement","newDataButton","tailwind","_useState","_useState2","_slicedToArray","searchString","setSearchString","_useState3","undefined","_useState4","selectedItem","setSelectedItem","_useQuery","_asyncToGenerator","data","isError","isLoading","error","filter","current","valueToSearchIn","toLowerCase","valueToSearch","includes","item","style","children","role","length","onChange","e","target","value","placeholder","map","index","onClick"],"sources":["D:/Logingfg - Copy/src/GenericComponent/Dataview.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from \"./LoadingSpinneer\";\r\nimport { View } from \"react-native-web\";\r\nimport { useTailwind } from \"tailwind-rn\";\r\n\r\nfunction DataView({ queryFunction, queryKey, getSearchableValue, Card, DetailedElement, newDataButton }) {\r\n    const tailwind = useTailwind();\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    const [selectedItem, setSelectedItem] = useState(undefined);\r\n\r\n    var { data, isError, isLoading, error } = useQuery(queryKey, async () => await queryFunction());\r\n\r\n    if (data && searchString !== \"\") {\r\n        data = data.filter((current) => {\r\n            var valueToSearchIn = getSearchableValue(current).toLowerCase();\r\n            var valueToSearch = searchString.toLowerCase();\r\n            return valueToSearchIn.includes(valueToSearch);\r\n        })\r\n    }\r\n\r\n    if (selectedItem && DetailedElement) {\r\n        return (\r\n            <DetailedElement item={selectedItem} setSelectedItem={setSelectedItem} />\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={tailwind(\"flex w-full h-full justify-center items-center\")} >\r\n                <LoadingSpinner />\r\n            </View >\r\n        )\r\n    }\r\n\r\n    if (isError) {\r\n        return (\r\n            <View style={tailwind(\"flex flex-col p-2\")}>\r\n                <View style={tailwind(\"p-4 mb-4 text-sm text-white text-center rounded-lg bg-gray-700\")} role=\"alert\">\r\n                    {error}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    if (data) {\r\n        return (\r\n            <View style={tailwind(\"flex flex-col gap-2 h-full\")}>\r\n                <View style={tailwind(\"flex flex-wrap w-full items-center gap-5 mb-2\")}>\r\n                    <View style={tailwind(\"mx-auto\")}>\r\n                        <View>Count: {data.length} </View>\r\n                    </View>\r\n                    <input style={tailwind(\"flex-grow border mt-4 mb-4 text-white text-sm rounded-sm focus:ring-primary-600 focus:border-primary-600 block p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\")}\r\n                        onChange={(e) => setSearchString(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                    />\r\n\r\n                    <View style={tailwind(\"mx-auto\")}>\r\n                        {newDataButton}\r\n                    </View>\r\n                </View>\r\n                <View style={tailwind(\"flex-1\")}>\r\n                    <View style={tailwind(\"h-full overflow-y-scroll\")}>\r\n                        {\r\n                            data && data.length === 0 ?\r\n                                <View style={tailwind(\"flex w-full justify-center\")}>\r\n                                    No Data To Display\r\n                                </View>\r\n                                :\r\n                                <View style={tailwind(\"grid gap-2 lg:grid-cols-4 xl:grid-cols-4 md:grid-cols-3 sm:grid-cols-1\")}>\r\n                                    {\r\n                                        data.map((item, index) =>\r\n                                            <View style={tailwind(\"w-full\")} key={index} onClick={() => setSelectedItem(item)}>\r\n                                                <Card item={item} />\r\n                                            </View>\r\n                                        )\r\n                                    }\r\n                                </View>\r\n                        }\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}