{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SchemaTypes } from \"../helper/extrapropertise\";\nimport { GenericDatePicker } from \"./DatePicker\";\nimport ModallImageView from \"../screens/ModalImageView\";\nimport { dataview } from \"../styles/Dataview\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { CommonClass } from \"../styles/Commonclass\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Addproperty = function Addproperty(_ref) {\n  var element = _ref.element,\n    Onchange = _ref.Onchange,\n    onUpload = _ref.onUpload,\n    state = _ref.state,\n    handleDelete = _ref.handleDelete,\n    _ref$value = _ref.value,\n    value = _ref$value === void 0 ? undefined : _ref$value,\n    index = _ref.index;\n  if (element.type === SchemaTypes.file) {\n    var src = undefined;\n    var title = undefined;\n    if (index >= 0) {\n      src = value == null ? void 0 : value.value;\n      title = value == null ? void 0 : value.fileName;\n      ContentType = value == null ? void 0 : value.ContentType;\n    }\n    if (index === undefined) {\n      var _state$element$name, _state$element$name2, _state$element$name3;\n      src = (_state$element$name = state[element.name]) == null ? void 0 : _state$element$name.value;\n      title = (_state$element$name2 = state[element.name]) == null ? void 0 : _state$element$name2.fileName;\n      ContentType = (_state$element$name3 = state[element.name]) == null ? void 0 : _state$element$name3.ContentType;\n    }\n    return _jsxs(View, {\n      style: dataview.fileContainer,\n      children: [_jsxs(View, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-evenly'\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: CommonClass.chooseFile,\n          onPress: _asyncToGenerator(function* () {\n            return yield onUpload(index, element.name);\n          }),\n          children: _jsx(Text, {\n            children: \"Choose file\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: CommonClass.Editbutton,\n          onPress: function onPress() {\n            return handleDelete(index, element.name);\n          },\n          children: _jsx(AntDesign, {\n            name: \"delete\",\n            size: 24,\n            color: \"white\"\n          })\n        })]\n      }), _jsx(ModallImageView, {\n        src: src,\n        ContentType: ContentType,\n        title: title\n      })]\n    });\n  }\n  if (element.type === SchemaTypes.DATE) {\n    return _jsx(View, {\n      children: _jsx(GenericDatePicker, {\n        Onchange: Onchange,\n        value: state[element.name] ? new Date(state[element.name]) : new Date(1598051730000),\n        element: element\n      }, element.name)\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(TextInput, {\n      textContentType: \"\",\n      style: element.style,\n      onChangeText: function onChangeText(e) {\n        return Onchange(e, element);\n      },\n      placeholder: element.placeholder,\n      value: state[element.name] ? state[element.name] : \"\"\n    })\n  });\n};","map":{"version":3,"names":["SchemaTypes","GenericDatePicker","ModallImageView","dataview","AntDesign","CommonClass","jsx","_jsx","jsxs","_jsxs","Addproperty","_ref","element","Onchange","onUpload","state","handleDelete","_ref$value","value","undefined","index","type","file","src","title","fileName","ContentType","_state$element$name","_state$element$name2","_state$element$name3","name","View","style","fileContainer","children","display","flexDirection","justifyContent","TouchableOpacity","chooseFile","onPress","_asyncToGenerator","Text","Editbutton","size","color","DATE","Date","TextInput","textContentType","onChangeText","e","placeholder"],"sources":["D:/ReactNativeApplication/TestApp/src/GenericComponent/Addproperty.js"],"sourcesContent":["import { Modal, View, Button, Text, ScrollView, TextInput, TouchableOpacity } from 'react-native';\r\nimport { SchemaTypes } from \"../helper/extrapropertise\"\r\nimport { GenericDatePicker } from \"./DatePicker\"\r\nimport ModallImageView from \"../screens/ModalImageView\"\r\nimport { dataview } from '../styles/Dataview';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { CommonClass } from '../styles/Commonclass';\r\n\r\nexport const Addproperty = ({ element, Onchange, onUpload, state, handleDelete, value = undefined, index }) => {\r\n    if (element.type === SchemaTypes.file) {\r\n        let src = undefined;\r\n        let title = undefined;\r\n        if (index >= 0) {\r\n            src = value?.value\r\n            title = value?.fileName\r\n            ContentType = value?.ContentType\r\n        }\r\n        if (index === undefined) {\r\n            src = state[element.name]?.value\r\n            title = state[element.name]?.fileName\r\n            ContentType = state[element.name]?.ContentType\r\n        }\r\n        return (\r\n            <View style={dataview.fileContainer}>\r\n                <View style = {{display:'flex',flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity style={CommonClass.chooseFile} onPress={async () => await onUpload(index, element.name)}>\r\n                        <Text>Choose file</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={CommonClass.Editbutton} onPress={() => handleDelete(index, element.name)}>\r\n                        <AntDesign name=\"delete\" size={24} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ModallImageView\r\n                    src={src}\r\n                    ContentType = {ContentType}\r\n                    title={title}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    if (element.type === SchemaTypes.DATE) {\r\n        return (\r\n            <View>\r\n                <GenericDatePicker\r\n                    Onchange={Onchange}\r\n                    value={(state[element.name]) ? new Date(state[element.name]) : new Date(1598051730000)}\r\n                    key={element.name}\r\n                    element={element}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                textContentType=''\r\n                style={element.style}\r\n                onChangeText={(e) =>\r\n                    Onchange(e, element)}\r\n                placeholder={element.placeholder}\r\n                value={(state[element.name]) ? state[element.name] : \"\"}\r\n            // keyboardType={element.type}\r\n            />\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}