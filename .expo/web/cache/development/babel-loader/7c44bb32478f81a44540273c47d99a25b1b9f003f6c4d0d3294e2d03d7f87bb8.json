{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ModalWithForm = function ModalWithForm() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var handleSubmit = function handleSubmit() {\n    console.log('Name:', name);\n    console.log('Email:', email);\n    setName('');\n    setEmail('');\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Button, {\n      title: \"Open Form Modal\",\n      onPress: function onPress() {\n        return setModalVisible(true);\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        children: _jsxs(View, {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 10\n          },\n          children: [_jsx(Text, {\n            children: \"Please fill out the form\"\n          }), _jsx(TextInput, {\n            placeholder: \"Name\",\n            value: name,\n            onChangeText: function onChangeText(text) {\n              return setName(text);\n            },\n            style: {\n              height: 40,\n              borderColor: 'gray',\n              borderWidth: 1,\n              marginTop: 10\n            }\n          }), _jsx(TextInput, {\n            placeholder: \"Email\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            style: {\n              height: 40,\n              borderColor: 'gray',\n              borderWidth: 1,\n              marginTop: 10\n            }\n          }), _jsx(Button, {\n            title: \"Submit\",\n            onPress: handleSubmit\n          }), _jsx(Button, {\n            title: \"Close\",\n            onPress: function onPress() {\n              return setModalVisible(false);\n            }\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default ModalWithForm;","map":{"version":3,"names":["React","useState","Modal","View","TextInput","Button","Text","jsx","_jsx","jsxs","_jsxs","ModalWithForm","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","name","setName","_useState5","_useState6","email","setEmail","handleSubmit","console","log","style","flex","justifyContent","alignItems","children","title","onPress","animationType","transparent","visible","onRequestClose","backgroundColor","padding","borderRadius","placeholder","value","onChangeText","text","height","borderColor","borderWidth","marginTop"],"sources":["C:/Users/ketan/Logingfg/src/screens/Homepage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, View, TextInput, Button, Text } from 'react-native';\r\n\r\n\r\nconst ModalWithForm = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    // Handle form submission here\r\n    console.log('Name:', name);\r\n    console.log('Email:', email);\r\n    // You can perform further actions here, like sending the form data to a server\r\n    // Reset form fields\r\n    setName('');\r\n    setEmail('');\r\n    // Close the modal\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Button title=\"Open Form Modal\" onPress={() => setModalVisible(true)} />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\r\n          <View style={{ backgroundColor: 'white', padding: 20, borderRadius: 10 }}>\r\n            <Text>Please fill out the form</Text>\r\n            <TextInput\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChangeText={text => setName(text)}\r\n              style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginTop: 10 }}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChangeText={text => setEmail(text)}\r\n              style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginTop: 10 }}\r\n            />\r\n            <Button title=\"Submit\" onPress={handleSubmit} />\r\n            <Button title=\"Close\" onPress={() => setModalVisible(false)} />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ModalWithForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}