{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { readAsStringAsync, EncodingType, StorageAccessFramework, writeAsStringAsync } from \"expo-file-system\";\nexport var blobToBase64 = function () {\n  var _ref = _asyncToGenerator(function* (blob) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        var pdfBase64Data = reader.result;\n        resolve(pdfBase64Data);\n      };\n      reader.onerror = function (error) {\n        reject(error);\n      };\n      reader.readAsDataURL(blob);\n    });\n  });\n  return function blobToBase64(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function deepCopyObject(fromObject) {\n  return JSON.parse(JSON.stringify(fromObject));\n}\nexport var getIndex = function getIndex(obj) {\n  if (!obj || Object.keys(obj) === 0) {\n    return 1;\n  }\n  return Object.keys(obj).length + 1;\n};\nexport var ShowPdf = function () {\n  var _ref2 = _asyncToGenerator(function* (value) {\n    var r = yield fetch(value);\n    var blob = yield r.blob();\n    window.open(URL.createObjectURL(blob), \"_blank\");\n  });\n  return function ShowPdf(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport function getDateString(dateString) {\n  var date = new Date(dateString);\n  return date.toLocaleDateString();\n}\nexport var ConvertBase64Format = function () {\n  var _ref3 = _asyncToGenerator(function* (data) {\n    var uri = data.assets[0]['uri'];\n    var name = data.assets[0]['name'];\n    var content = yield readAsStringAsync(uri, {\n      encoding: EncodingType.Base64\n    });\n    return {\n      value: content,\n      ContentType: data.assets[0]['mimeType'],\n      fileName: name\n    };\n  });\n  return function ConvertBase64Format(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["readAsStringAsync","EncodingType","StorageAccessFramework","writeAsStringAsync","blobToBase64","_ref","_asyncToGenerator","blob","Promise","resolve","reject","reader","FileReader","onloadend","pdfBase64Data","result","onerror","error","readAsDataURL","_x","apply","arguments","deepCopyObject","fromObject","JSON","parse","stringify","getIndex","obj","Object","keys","length","ShowPdf","_ref2","value","r","fetch","window","open","URL","createObjectURL","_x2","getDateString","dateString","date","Date","toLocaleDateString","ConvertBase64Format","_ref3","data","uri","assets","name","content","encoding","Base64","ContentType","fileName","_x3"],"sources":["D:/ReactNativeApplication/TestApp/src/helper/helper.js"],"sourcesContent":["import { readAsStringAsync, EncodingType,StorageAccessFramework,writeAsStringAsync } from \"expo-file-system\"\r\nexport const blobToBase64 = async (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        var reader = new FileReader();\r\n\r\n        reader.onloadend = function () {\r\n            var pdfBase64Data = reader.result;\r\n            resolve(pdfBase64Data);\r\n        };\r\n\r\n        reader.onerror = function (error) {\r\n            reject(error);\r\n        };\r\n\r\n        reader.readAsDataURL(blob);\r\n    });\r\n};\r\n\r\nexport function deepCopyObject(fromObject) {\r\n    return JSON.parse(JSON.stringify(fromObject));\r\n}\r\n\r\nexport const getIndex = (obj) => {\r\n    if (!obj || Object.keys(obj) === 0) {\r\n        return 1;\r\n    }\r\n    return Object.keys(obj).length + 1;\r\n}\r\n\r\nexport const ShowPdf = async (value) => {\r\n    const r = await fetch(value);\r\n    const blob = await r.blob();\r\n    window.open(URL.createObjectURL(blob), \"_blank\");\r\n}\r\n\r\n\r\nexport function getDateString(dateString) {\r\n    var date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n}\r\n\r\nexport const ConvertBase64Format = async (data) => {\r\n    let uri = data.assets[0]['uri'];\r\n    let name = data.assets[0]['name']\r\n    let content = await readAsStringAsync(uri, { encoding: EncodingType.Base64 });\r\n    return { value: content, ContentType: data.assets[0]['mimeType'], fileName: name };\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,iBAAiB,EAAEC,YAAY,EAACC,sBAAsB,EAACC,kBAAkB,QAAQ,kBAAkB;AAC5G,OAAO,IAAMC,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAK;IACxC,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACpC,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE7BD,MAAM,CAACE,SAAS,GAAG,YAAY;QAC3B,IAAIC,aAAa,GAAGH,MAAM,CAACI,MAAM;QACjCN,OAAO,CAACK,aAAa,CAAC;MAC1B,CAAC;MAEDH,MAAM,CAACK,OAAO,GAAG,UAAUC,KAAK,EAAE;QAC9BP,MAAM,CAACO,KAAK,CAAC;MACjB,CAAC;MAEDN,MAAM,CAACO,aAAa,CAACX,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC;EAAA,gBAfYH,YAAYA,CAAAe,EAAA;IAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;EAAA;AAAA,GAexB;AAED,OAAO,SAASC,cAAcA,CAACC,UAAU,EAAE;EACvC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,UAAU,CAAC,CAAC;AACjD;AAEA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,GAAG,EAAK;EAC7B,IAAI,CAACA,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,KAAK,CAAC,EAAE;IAChC,OAAO,CAAC;EACZ;EACA,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,GAAG,CAAC;AACtC,CAAC;AAED,OAAO,IAAMC,OAAO;EAAA,IAAAC,KAAA,GAAA3B,iBAAA,CAAG,WAAO4B,KAAK,EAAK;IACpC,IAAMC,CAAC,SAASC,KAAK,CAACF,KAAK,CAAC;IAC5B,IAAM3B,IAAI,SAAS4B,CAAC,CAAC5B,IAAI,CAAC,CAAC;IAC3B8B,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,eAAe,CAACjC,IAAI,CAAC,EAAE,QAAQ,CAAC;EACpD,CAAC;EAAA,gBAJYyB,OAAOA,CAAAS,GAAA;IAAA,OAAAR,KAAA,CAAAb,KAAA,OAAAC,SAAA;EAAA;AAAA,GAInB;AAGD,OAAO,SAASqB,aAAaA,CAACC,UAAU,EAAE;EACtC,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EAC/B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC;AACpC;AAEA,OAAO,IAAMC,mBAAmB;EAAA,IAAAC,KAAA,GAAA1C,iBAAA,CAAG,WAAO2C,IAAI,EAAK;IAC/C,IAAIC,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/B,IAAIC,IAAI,GAAGH,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACjC,IAAIE,OAAO,SAASrD,iBAAiB,CAACkD,GAAG,EAAE;MAAEI,QAAQ,EAAErD,YAAY,CAACsD;IAAO,CAAC,CAAC;IAC7E,OAAO;MAAErB,KAAK,EAAEmB,OAAO;MAAEG,WAAW,EAAEP,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;MAAEM,QAAQ,EAAEL;IAAK,CAAC;EACtF,CAAC;EAAA,gBALYL,mBAAmBA,CAAAW,GAAA;IAAA,OAAAV,KAAA,CAAA5B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAK/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}