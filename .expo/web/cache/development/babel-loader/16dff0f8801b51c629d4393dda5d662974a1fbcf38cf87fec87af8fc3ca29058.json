{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { endpoints } from \"../Endpoints/endpoints\";\nimport { users } from \"../helper/extrapropertise\";\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\";\nimport DataView from \"../GenericComponent/Dataview\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Users = function Users() {\n  var queryKey = [users];\n  var queryFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      return yield endpoints.Users.getAll();\n    });\n    return function queryFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getValueToSearch = function getValueToSearch(current) {\n    return current.Task;\n  };\n  return _jsx(DataView, {\n    queryFunction: queryFunction,\n    queryKey: queryKey,\n    getSearchableValue: getValueToSearch,\n    Card: _jsx(View, {\n      children: \"Chetan\"\n    })\n  });\n};","map":{"version":3,"names":["useQuery","endpoints","users","LoadingSpinner","DataView","View","jsx","_jsx","Users","queryKey","queryFunction","_ref","_asyncToGenerator","getAll","apply","arguments","getValueToSearch","current","Task","getSearchableValue","Card","children"],"sources":["D:/Logingfg - Copy/src/screens/Users.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { endpoints } from \"../Endpoints/endpoints\"\r\nimport { users } from \"../helper/extrapropertise\"\r\nimport LoadingSpinner from \"../GenericComponent/LoadingSpinneer\"\r\nimport DataView from \"../GenericComponent/Dataview\"\r\nimport { View } from \"react-native-web\"\r\n\r\nexport const Users = () => {\r\n    const queryKey = [users]\r\n    const queryFunction = async () => {\r\n        return await endpoints.Users.getAll()\r\n    }\r\n    const getValueToSearch = (current) => {\r\n        return (\r\n          current.Task\r\n        )\r\n    }\r\n    return (\r\n        <DataView\r\n            queryFunction={queryFunction}\r\n            queryKey={queryKey}\r\n            getSearchableValue={getValueToSearch}\r\n            Card={<View>Chetan</View>}\r\n        />\r\n    )\r\n\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS;AAClB,SAASC,KAAK;AACd,OAAOC,cAAc;AACrB,OAAOC,QAAQ;AAAoC,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EACvB,IAAMC,QAAQ,GAAG,CAACP,KAAK,CAAC;EACxB,IAAMQ,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,aAAaX,SAAS,CAACO,KAAK,CAACK,MAAM,CAAC,CAAC;IACzC,CAAC;IAAA,gBAFKH,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAElB;EACD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;IAClC,OACEA,OAAO,CAACC,IAAI;EAElB,CAAC;EACD,OACIX,IAAA,CAACH,QAAQ;IACLM,aAAa,EAAEA,aAAc;IAC7BD,QAAQ,EAAEA,QAAS;IACnBU,kBAAkB,EAAEH,gBAAiB;IACrCI,IAAI,EAAEb,IAAA,CAACF,IAAI;MAAAgB,QAAA,EAAC;IAAM,CAAM;EAAE,CAC7B,CAAC;AAGV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}