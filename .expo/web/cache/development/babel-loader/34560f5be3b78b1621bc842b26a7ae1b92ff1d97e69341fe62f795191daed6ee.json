{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport LoadingSpinner from \"./LoadingSpinneer\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTailwind } from \"tailwind-rn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DataView(_ref) {\n  var queryFunction = _ref.queryFunction,\n    queryKey = _ref.queryKey,\n    getSearchableValue = _ref.getSearchableValue,\n    Card = _ref.Card,\n    DetailedElement = _ref.DetailedElement,\n    newDataButton = _ref.newDataButton;\n  var tailwind = useTailwind();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchString = _useState2[0],\n    setSearchString = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItem = _useState4[0],\n    setSelectedItem = _useState4[1];\n  var _useQuery = useQuery({\n      queryKey: queryKey,\n      queryFn: function () {\n        var _queryFn = _asyncToGenerator(function* () {\n          return yield queryFunction();\n        });\n        function queryFn() {\n          return _queryFn.apply(this, arguments);\n        }\n        return queryFn;\n      }()\n    }),\n    data = _useQuery.data,\n    isError = _useQuery.isError,\n    isLoading = _useQuery.isLoading,\n    error = _useQuery.error;\n  if (data && searchString !== \"\") {\n    data = data.filter(function (current) {\n      var valueToSearchIn = getSearchableValue(current).toLowerCase();\n      var valueToSearch = searchString.toLowerCase();\n      return valueToSearchIn.includes(valueToSearch);\n    });\n  }\n  if (selectedItem && DetailedElement) {\n    return _jsx(DetailedElement, {\n      item: selectedItem,\n      setSelectedItem: setSelectedItem\n    });\n  }\n  if (isLoading) {\n    return _jsx(View, {\n      style: tailwind(\"flex w-full h-full justify-center items-center\"),\n      children: _jsx(LoadingSpinner, {})\n    });\n  }\n  if (isError) {\n    return _jsx(View, {\n      style: tailwind(\"flex flex-col p-2\"),\n      children: _jsx(View, {\n        style: tailwind(\"p-4 mb-4 text-sm text-white text-center rounded-lg bg-gray-700\"),\n        role: \"alert\",\n        children: error\n      })\n    });\n  }\n  if (data) {\n    return _jsxs(View, {\n      style: tailwind(\"flex flex-col gap-2 h-full\"),\n      children: [_jsxs(View, {\n        style: tailwind(\"flex flex-wrap w-full items-center gap-5 mb-2\"),\n        children: [_jsx(TextInput, {\n          style: tailwind(\"flex-grow border mt-4 mb-4 text-white text-sm rounded-sm focus:ring-primary-600 focus:border-primary-600 block p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\"),\n          onChange: function onChange(e) {\n            return setSearchString(e.target.value);\n          },\n          placeholder: \"Search\"\n        }), _jsx(View, {\n          style: tailwind(\"mx-auto\"),\n          children: newDataButton\n        })]\n      }), _jsx(View, {\n        style: tailwind(\"flex-1\"),\n        children: _jsx(View, {\n          style: tailwind(\"h-full overflow-y-scroll bg-\"),\n          children: data && data.length === 0 ? _jsx(View, {\n            style: tailwind(\"flex w-full justify-center\"),\n            children: \"No Data To Display\"\n          }) : _jsx(View, {\n            style: tailwind(\"gap-2\"),\n            children: data.map(function (item, index) {\n              return _jsx(View, {\n                style: tailwind(\"w-full\"),\n                onClick: function onClick() {\n                  return setSelectedItem(item);\n                },\n                children: _jsx(Card, {\n                  item: item\n                })\n              }, index);\n            })\n          })\n        })\n      })]\n    });\n  }\n}\nexport default DataView;","map":{"version":3,"names":["useQuery","useState","LoadingSpinner","TextInput","View","useTailwind","jsx","_jsx","jsxs","_jsxs","DataView","_ref","queryFunction","queryKey","getSearchableValue","Card","DetailedElement","newDataButton","tailwind","_useState","_useState2","_slicedToArray","searchString","setSearchString","_useState3","undefined","_useState4","selectedItem","setSelectedItem","_useQuery","queryFn","_queryFn","_asyncToGenerator","apply","arguments","data","isError","isLoading","error","filter","current","valueToSearchIn","toLowerCase","valueToSearch","includes","item","style","children","role","onChange","e","target","value","placeholder","length","map","index","onClick"],"sources":["D:/Logingfg - Copy/src/GenericComponent/Dataview.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from \"./LoadingSpinneer\";\r\nimport { TextInput, View } from \"react-native-web\";\r\nimport { useTailwind } from \"tailwind-rn\";\r\n\r\nfunction DataView({ queryFunction, queryKey, getSearchableValue, Card, DetailedElement, newDataButton }) {\r\n    const tailwind = useTailwind();\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    const [selectedItem, setSelectedItem] = useState(undefined);\r\n\r\n    var { data, isError, isLoading, error } = useQuery({ queryKey: queryKey, queryFn: async () => await queryFunction() });\r\n\r\n    if (data && searchString !== \"\") {\r\n        data = data.filter((current) => {\r\n            var valueToSearchIn = getSearchableValue(current).toLowerCase();\r\n            var valueToSearch = searchString.toLowerCase();\r\n            return valueToSearchIn.includes(valueToSearch);\r\n        })\r\n    }\r\n\r\n    if (selectedItem && DetailedElement) {\r\n        return (\r\n            <DetailedElement item={selectedItem} setSelectedItem={setSelectedItem} />\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={tailwind(\"flex w-full h-full justify-center items-center\")} >\r\n                <LoadingSpinner />\r\n            </View >\r\n        )\r\n    }\r\n\r\n    if (isError) {\r\n        return (\r\n            <View style={tailwind(\"flex flex-col p-2\")}>\r\n                <View style={tailwind(\"p-4 mb-4 text-sm text-white text-center rounded-lg bg-gray-700\")} role=\"alert\">\r\n                    {error}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    if (data) {\r\n        return (\r\n            <View style={tailwind(\"flex flex-col gap-2 h-full\")}>\r\n                <View style={tailwind(\"flex flex-wrap w-full items-center gap-5 mb-2\")}>\r\n                    <TextInput style={tailwind(\"flex-grow border mt-4 mb-4 text-white text-sm rounded-sm focus:ring-primary-600 focus:border-primary-600 block p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\")}\r\n                        onChange={(e) => setSearchString(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                    />\r\n\r\n                    <View style={tailwind(\"mx-auto\")}>\r\n                        {newDataButton}\r\n                    </View>\r\n                </View>\r\n                <View style={tailwind(\"flex-1\")}>\r\n                    <View style={tailwind(\"h-full overflow-y-scroll bg-\")}>\r\n                        {\r\n                            data && data.length === 0 ?\r\n                                <View style={tailwind(\"flex w-full justify-center\")}>\r\n                                    No Data To Display\r\n                                </View>\r\n                                :\r\n                                <View style={tailwind(\"gap-2\")}>\r\n                                    {\r\n                                        data.map((item, index) =>\r\n                                            <View style={tailwind(\"w-full\")} key={index} onClick={() => setSelectedItem(item)}>\r\n                                                <Card item={item}></Card>\r\n                                            </View>\r\n                                        )\r\n                                    }\r\n                                </View>\r\n                        }\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}